/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paneles;

import alertas.ErrorAlert;
import static alertas.ErrorAlert.lanza_error_variable_sin_ex;
import alertas.SuccessAlert;
import com.lowagie.text.DocumentException;
import com.lowagie.text.pdf.PdfCopyFields;
import com.lowagie.text.pdf.PdfReader;
import estilo_tabla.Clase_CellRender;
import excel.ExcelGenerator;
import interaccion_BD.conexion;
import interaccion_BD.datos_reporte;
import interaccion_BD.opciones_de_gestionar_usuarios;
import interaccion_BD.opciones_tabla_general;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.event.InputEvent;
import principal.Principal;
import static paneles.pnlHome.tabla_general;
import static paneles.pnl_add.boton_registrar;
import static principal.Principal.pnlPrincipal;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JFrame;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.SQLException;
import java.util.ArrayList;
import static java.util.Collections.list;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.swing.JRViewer;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import static org.codehaus.groovy.ast.tools.GeneralUtils.params;
import static paneles.pnl_add.boton_registrar1;

/**
 *
 * @author 4l3
 */
public class pnlHome extends javax.swing.JPanel {
private int PosicionMouse;
    
    /**
     * Creates new form pnlHome
     */
    public pnlHome() {
        initComponents();
        this.menu.add(pnlMenu1);
        tabla_general.setColorFilasBackgound1(new java.awt.Color(184, 204, 228));
        tabla_general.setColorFilasBackgound2(new java.awt.Color(184, 204, 228));
        tabla_general.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabla_general.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        panel_selection.setAlignmentX(Component.CENTER_ALIGNMENT);
        // seleccionar el area a mostrar segun area del usuario
        marca_area(opciones_de_gestionar_usuarios.extraer_area("select area from usuarios where userr='"+Principal.label_user.getText()+"'"));
        // ocultar columna sin perder su valor
        tabla_general.getColumnModel().getColumn(46).setMaxWidth(0);
        tabla_general.getColumnModel().getColumn(46).setMinWidth(0);
        tabla_general.getTableHeader().getColumnModel().getColumn(46).setMaxWidth(0);
        tabla_general.getTableHeader().getColumnModel().getColumn(46).setMinWidth(0);
        // otra columna oculta PDTE ELIMINAR
        tabla_general.getColumnModel().getColumn(48).setMaxWidth(0);
        tabla_general.getColumnModel().getColumn(48).setMinWidth(0);
        tabla_general.getTableHeader().getColumnModel().getColumn(48).setMaxWidth(0);
        tabla_general.getTableHeader().getColumnModel().getColumn(48).setMinWidth(0);
        resizeColumnWidth(tabla_general);
        
        seleccionar_todos.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if(seleccionar_todos.isSelected()){
                    marcar_todos();
                }else{
                    desmarcar_todos();
                }
            }
        });
        
        tabla_general.getColumnModel().getColumn(47).setCellRenderer(new Clase_CellRender() );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        menu = new rojerusan.RSPopuMenu();
        pnlMenu1 = new javax.swing.JPanel();
        btnBorrar = new rojeru_san.RSButtonRiple();
        btnEditar = new rojeru_san.RSButtonRiple();
        btnConsultar = new rojeru_san.RSButtonRiple();
        jPanel1 = new javax.swing.JPanel();
        scroll = new javax.swing.JScrollPane();
        tabla_general = new rojerusan.RSTableMetro();
        panel_selection = new javax.swing.JPanel();
        produccion = new javax.swing.JCheckBox();
        base = new javax.swing.JCheckBox();
        aplicaciones = new javax.swing.JCheckBox();
        comunicaciones = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        seleccionar_todos = new javax.swing.JCheckBox();

        menu.setBackground(new java.awt.Color(255, 255, 255));
        menu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        pnlMenu1.setBackground(new java.awt.Color(255, 255, 255));

        btnBorrar.setBackground(new java.awt.Color(69, 87, 252));
        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnEliminar.png"))); // NOI18N
        btnBorrar.setText("ELIMINAR");
        btnBorrar.setColorHover(new java.awt.Color(87, 103, 253));
        btnBorrar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnBorrar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnEditar.setBackground(new java.awt.Color(69, 87, 252));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnEditar.png"))); // NOI18N
        btnEditar.setText("EDITAR");
        btnEditar.setColorHover(new java.awt.Color(87, 103, 253));
        btnEditar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnConsultar.setBackground(new java.awt.Color(69, 87, 252));
        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/consultar.png"))); // NOI18N
        btnConsultar.setText("CONSULTAR");
        btnConsultar.setColorHover(new java.awt.Color(87, 103, 253));
        btnConsultar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnConsultar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMenu1Layout = new javax.swing.GroupLayout(pnlMenu1);
        pnlMenu1.setLayout(pnlMenu1Layout);
        pnlMenu1Layout.setHorizontalGroup(
            pnlMenu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnEditar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnBorrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnConsultar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pnlMenu1Layout.setVerticalGroup(
            pnlMenu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenu1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setLayout(new java.awt.GridBagLayout());

        scroll.setBorder(null);

        tabla_general.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID-GOYA", "N CXTO", "N EXPEDIENTE", "DESCRIPCION", "TIPO CXTO", "PRIORIDAD", "TIPO SERV O INVERSION", "PROMOTOR", "AREA", "UNIDAD", "RESP AREA", "RESP UNIDAD", "UNIDAD AUXILIAR", "RESP AUXILIAR", "PRES BASE SIN IVA", "IMPORT ADJUD SIN IVA", "ESTADO EXPEDIENTE", "MTO GARANTIA", "TIEMPO EJECUCION", "INICIO GARANT APROX", "FIN GARANT APROX", "AÑOS PRORROGABLE", "ALARMA", "FUTURO LOTE", "PROYECTO", "ESTADO GARANTIA", "PASADO MTO INCLUIDA EN", "SOL ADQUISICION", "MEM TEC VALIDADA", "DL VALIDADO", "NUEVO EXP COTEC DE", "TIPO EXPEDIENTE", "PROCEDIMIENTO", "IMPORTE EXP", "ULT DIA PREST OFERTAS", "INF TEC REALIZADO", "FECHA ADJUDICACION", "EMPRESA ADJUDICATORIA", "IMPORTE ADJUDICACION", "FECHA FORMALIZACION", "OTRAS FECHAS", "CAPITULO", "CERT A NOV 2020", "ESTADO OOCC A 09/07/2021", "OBSERVACIONES", "OBSERVACIONES DE OYA", "tabla", "TOMAR", "PDTE ELIMINAR"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_general.setToolTipText("");
        tabla_general.setAltoHead(30);
        tabla_general.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabla_general.setColorBackgoundHead(new java.awt.Color(38, 86, 186));
        tabla_general.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tabla_general.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabla_general.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tabla_general.setColorHoverBackgound(new java.awt.Color(69, 87, 252));
        tabla_general.setColorSelBackgound(new java.awt.Color(69, 87, 252));
        tabla_general.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla_general.setFuenteFilas(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        tabla_general.setFuenteFilasSelect(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        tabla_general.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabla_general.setGrosorBordeFilas(0);
        tabla_general.setHover(true);
        tabla_general.setMultipleSeleccion(false);
        tabla_general.setRowHeight(30);
        tabla_general.setSelectionBackground(new java.awt.Color(99, 70, 250));
        tabla_general.getTableHeader().setReorderingAllowed(false);
        tabla_general.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_generalMouseClicked(evt);
            }
        });
        scroll.setViewportView(tabla_general);
        if (tabla_general.getColumnModel().getColumnCount() > 0) {
            tabla_general.getColumnModel().getColumn(46).setPreferredWidth(0);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1169;
        gridBagConstraints.ipady = 518;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(scroll, gridBagConstraints);

        panel_selection.setOpaque(false);

        produccion.setBackground(new java.awt.Color(184, 204, 228));
        produccion.setForeground(new java.awt.Color(0, 0, 0));
        produccion.setText("GESTIÓN DE LA PRODUCCIÓN ");
        produccion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        produccion.setIconTextGap(12);
        produccion.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        produccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                produccionActionPerformed(evt);
            }
        });
        panel_selection.add(produccion);

        base.setBackground(new java.awt.Color(242, 220, 219));
        base.setForeground(new java.awt.Color(0, 0, 0));
        base.setText("SISTEMAS BASE ");
        base.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        base.setIconTextGap(12);
        base.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        base.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baseActionPerformed(evt);
            }
        });
        panel_selection.add(base);

        aplicaciones.setBackground(new java.awt.Color(252, 213, 180));
        aplicaciones.setForeground(new java.awt.Color(0, 0, 0));
        aplicaciones.setText("GESTIÓN DE APLICACIONES ");
        aplicaciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        aplicaciones.setIconTextGap(12);
        aplicaciones.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        aplicaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aplicacionesActionPerformed(evt);
            }
        });
        panel_selection.add(aplicaciones);

        comunicaciones.setBackground(new java.awt.Color(217, 229, 189));
        comunicaciones.setForeground(new java.awt.Color(0, 0, 0));
        comunicaciones.setText("SISTEMA DE COMUNICACIONES ");
        comunicaciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        comunicaciones.setIconTextGap(12);
        comunicaciones.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        comunicaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comunicacionesActionPerformed(evt);
            }
        });
        panel_selection.add(comunicaciones);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/excel.png"))); // NOI18N
        jLabel1.setText("EXPORTAR A EXCEL");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jLabel1.setOpaque(true);
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        panel_selection.add(jLabel1);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pdf.png"))); // NOI18N
        jLabel2.setText("EXPORTAR A PDF");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jLabel2.setOpaque(true);
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        panel_selection.add(jLabel2);

        seleccionar_todos.setBackground(new java.awt.Color(255, 255, 255));
        seleccionar_todos.setForeground(new java.awt.Color(0, 0, 0));
        seleccionar_todos.setText("MARCAR TODOS");
        seleccionar_todos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        seleccionar_todos.setIconTextGap(12);
        seleccionar_todos.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        panel_selection.add(seleccionar_todos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panel_selection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_selection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // autoajustar tamaño de celdas al contenido que carga de bd 
    private void resizeColumnWidth(JTable table) {
    //Se obtiene el modelo de la columna
    TableColumnModel columnModel = table.getColumnModel();
    //Se obtiene el total de las columnas
    for (int column = 0; column < table.getColumnCount(); column++) {
        //Establecemos un valor minimo para el ancho de la columna
        int width = 150; //Min Width
        //Obtenemos el numero de filas de la tabla
        for (int row = 0; row < table.getRowCount(); row++) {
            //Obtenemos el renderizador de la tabla
            TableCellRenderer renderer = table.getCellRenderer(row, column);
            //Creamos un objeto para preparar el renderer
            Component comp = table.prepareRenderer(renderer, row, column);
            //Establecemos el width segun el valor maximo del ancho de la columna
            width = Math.max(comp.getPreferredSize().width + 1, width);

        }
        //Se establece una condicion para no sobrepasar el valor de 300
        //Esto es Opcional
        if (width > 300) {
            width = 300;
        }
        //Se establece el ancho de la columna
        columnModel.getColumn(column).setPreferredWidth(width);
    }
    
    // dejar fija la ultima columna 
    // ################  fin ####################################   

    
}
//####################################  FIN   #########################################    
    
    public void marcar_todos(){
        for(int i=0;i<tabla_general.getRowCount();i++){
            if(tabla_general.getValueAt(i, 47).toString().equals("false")){
                tabla_general.setValueAt(true, i, 47);
            }
        }
                seleccionar_todos.setText("DESMARCAR TODOS");
    }
    
    public void marca_area (String area){
        switch (area) 
        {
            case "Gestión de la producción": 
                     produccion.setSelected(true);
                     opciones_tabla_general.setListar(Principal.txt_buscar.getText(),"gestion_produccion");
                     break;
            case "Sistema base":  
                     base.setSelected(true);
                     opciones_tabla_general.setListar(Principal.txt_buscar.getText(),"sistema_base");
                     break;
            case "Gestión de aplicaciones":  
                     aplicaciones.setSelected(true);
                     opciones_tabla_general.setListar(Principal.txt_buscar.getText(),"gestion_aplicaciones");
                     break;
            case "Sistema de comunicaciones":  
                     comunicaciones.setSelected(true);
                     opciones_tabla_general.setListar(Principal.txt_buscar.getText(),"sistema_comunicaciones");
                     break;
            case "Administrador":  
                     produccion.setSelected(true);
                     base.setSelected(true);
                     aplicaciones.setSelected(true);
                     comunicaciones.setSelected(true);
                     opciones_tabla_general.setListar(Principal.txt_buscar.getText(),"gestion_produccion");
                     opciones_tabla_general.setListar(Principal.txt_buscar.getText(),"sistema_base");
                     opciones_tabla_general.setListar(Principal.txt_buscar.getText(),"gestion_aplicaciones");
                     opciones_tabla_general.setListar(Principal.txt_buscar.getText(),"sistema_comunicaciones");
                     break;
        }
    }
    
    public void desmarcar_todos(){
        for(int i=0;i<tabla_general.getRowCount();i++){
            if(tabla_general.getValueAt(i, 47).toString().equals("true")){
                tabla_general.setValueAt(false, i, 47);
            }
        }
                    seleccionar_todos.setText("MARCAR TODOS");
    }
    
    private void tabla_generalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_generalMouseClicked
        int row = tabla_general.rowAtPoint(evt.getPoint());
        if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            this.tabla_general.setRowSelectionInterval(row, row);
            PosicionMouse = evt.getY() / 16;
            esconde_opciones_menu();
            menu.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            if(evt.getClickCount()==2){
                int fila = this.tabla_general.getSelectedRow();
                String id = tabla_general.getValueAt(fila, 0).toString();
                String tabla=tabla_general.getValueAt(fila, 46).toString();
                String valor="";
                
                if(tabla_general.getValueAt(fila, 48)==null){
                    valor="pendiente";
                }
                    
                try {
                    opciones_tabla_general.actualizar_pendiente(valor,id, tabla);
                    System.out.println("excel valor verdadero "+tabla_general.getValueAt(0, 47).toString());
                    System.out.println("excel valor mentira "+tabla_general.getValueAt(1, 47).toString());
                    ArrayList<Integer> excel_array = new ArrayList();
                    for(int i=0;i<tabla_general.getRowCount();i++){
                        if(tabla_general.getValueAt(i, 47).toString().equals("true")){
                            excel_array.add(i);
                        }
                    }
                    System.out.println("arreglo "+excel_array.toString());
                     DefaultTableModel modelo = (DefaultTableModel) pnlHome.tabla_general.getModel();
                     while (modelo.getRowCount() > 0) {
                        modelo.removeRow(0);
                    }
                    if (produccion.isSelected()) {
                        opciones_tabla_general.nombre_tabla = "gestion_produccion";
                        opciones_tabla_general.setListar(Principal.txt_buscar.getText(), "gestion_produccion");
                        if (seleccionar_todos.isSelected()) {
                            marcar_todos();
                        }
                    }
                    if (base.isSelected()) {
                        opciones_tabla_general.nombre_tabla = "sistema_base";
                        opciones_tabla_general.setListar(Principal.txt_buscar.getText(), "sistema_base");
                        if (seleccionar_todos.isSelected()) {
                            marcar_todos();
                        }
                    }
                    if (aplicaciones.isSelected()) {
                        opciones_tabla_general.nombre_tabla = "gestion_aplicaciones";
                        opciones_tabla_general.setListar(Principal.txt_buscar.getText(), "gestion_aplicaciones");
                        if (seleccionar_todos.isSelected()) {
                            marcar_todos();
                        }
                    }
                    if (comunicaciones.isSelected()) {
                        opciones_tabla_general.nombre_tabla = "sistema_comunicaciones";
                        opciones_tabla_general.setListar(Principal.txt_buscar.getText(), "sistema_comunicaciones");
                        if (seleccionar_todos.isSelected()) {
                            marcar_todos();
                        }
                    }
                    for(int i=0;i<excel_array.size();i++){
                        tabla_general.setValueAt(true, excel_array.get(i), 47);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(pnlHome.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(pnlHome.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
            this.tabla_general.setRowSelectionInterval(row, row);
            }
        }
    }//GEN-LAST:event_tabla_generalMouseClicked

    public static boolean todos_marcados(){
        boolean todos=true;
        for(int i=0;i<tabla_general.getRowCount();i++){
            if(tabla_general.getValueAt(i, 47).toString().equals("false")){
                todos=false;
            }
        }
        return todos;
    }
    
    private void esconde_opciones_menu() {
        String sql_permiso_edit = "SELECT * FROM permisos WHERE usuario='" + principal.Principal.label_user.getText() + "'"
                + "and edit_contratos='1' ";
        String sql_permiso_delete = "SELECT * FROM permisos WHERE usuario='" + principal.Principal.label_user.getText() + "'"
                + "and delete_contratos='1' ";
        if (opciones_de_gestionar_usuarios.existe(sql_permiso_edit)) {
            pnlMenu1.getComponent(0).setVisible(true);
        } else {
            pnlMenu1.getComponent(0).setVisible(false);
        }
        if (opciones_de_gestionar_usuarios.existe(sql_permiso_delete)) {
            pnlMenu1.getComponent(1).setVisible(true);
        } else {
            pnlMenu1.getComponent(1).setVisible(false);
        }
    }
    
    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        this.menu.setVisible(false);
        String sql_permiso = "SELECT * FROM permisos WHERE usuario='" + principal.Principal.label_user.getText() + "'"
                + "and delete_contratos='1' ";
        String mj1 = "Usted no cuenta con los permisos requeridos para accedeer a este apartado.";
        String mj2 = "Si considera que estamos en un error contacte con el administrador del ";
        String mj3 = "sistema para que le otorgue los permisos pertinentes";
        if (opciones_de_gestionar_usuarios.existe(sql_permiso)) {
            this.menu.setVisible(false);
            int fila = this.tabla_general.getSelectedRow();

            String id = tabla_general.getValueAt(fila, 0).toString();
            String tabla = tabla_general.getValueAt(fila, 46).toString();

            String nombre = this.tabla_general.getValueAt(fila, 0).toString();

            alertas.WarningAlert w = new alertas.WarningAlert(new JFrame(), true);
            w.msj1.setText("Se eliminara el dato almacenado con");
            w.msj2.setText("identificador (" + nombre + ")");
            w.msj3.setText("de manera permanente del sistema.");
            w.setVisible(true);

            if (w.hecho) {
                int control = opciones_tabla_general.eliminar(id, tabla);
                if (control == 1) {
                    DefaultTableModel modelo = (DefaultTableModel) pnlHome.tabla_general.getModel();
                    while (modelo.getRowCount() > 0) {
                        modelo.removeRow(0);
                    }
                    if (produccion.isSelected()) {
                        opciones_tabla_general.nombre_tabla = "gestion_produccion";
                        opciones_tabla_general.setListar(Principal.txt_buscar.getText(), "gestion_produccion");
                        if (seleccionar_todos.isSelected()) {
                            marcar_todos();
                        }
                    }
                    if (base.isSelected()) {
                        opciones_tabla_general.nombre_tabla = "sistema_base";
                        opciones_tabla_general.setListar(Principal.txt_buscar.getText(), "sistema_base");
                        if (seleccionar_todos.isSelected()) {
                            marcar_todos();
                        }
                    }
                    if (aplicaciones.isSelected()) {
                        opciones_tabla_general.nombre_tabla = "gestion_aplicaciones";
                        opciones_tabla_general.setListar(Principal.txt_buscar.getText(), "gestion_aplicaciones");
                        if (seleccionar_todos.isSelected()) {
                            marcar_todos();
                        }
                    }
                    if (comunicaciones.isSelected()) {
                        opciones_tabla_general.nombre_tabla = "sistema_comunicaciones";
                        opciones_tabla_general.setListar(Principal.txt_buscar.getText(), "sistema_comunicaciones");
                        if (seleccionar_todos.isSelected()) {
                            marcar_todos();
                        }
                    }

                    SuccessAlert s = new SuccessAlert(new JFrame(), true);
                    s.msj1.setText("Registro eliminado con éxito");
                    s.msj2.setText("");
                    s.msj3.setText("");
                    s.setVisible(true);
                } else {
                    ErrorAlert e = new ErrorAlert(new JFrame(), true);
                    e.msj1.setText("Algo salio mal. No fue posible");
                    e.msj2.setText("continuar con esta acción.");
                    e.msj3.setText("");
                    e.setVisible(true);
                }
            }
        } else {
            lanza_error_variable_sin_ex(mj1, mj2, mj3);
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

   
    
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        this.menu.setVisible(false);
        pnl_add.editable=true;
                String sql_permiso="SELECT * FROM permisos WHERE usuario='"+principal.Principal.label_user.getText()+"'"
                + "and edit_contratos='1' ";
                String mj1="Usted no cuenta con los permisos requeridos para accedeer a este apartado.";
                String mj2="Si considera que estamos en un error contacte con el administrador del ";
                String mj3="sistema para que le otorgue los permisos pertinentes";
                
                        if(opciones_de_gestionar_usuarios.existe(sql_permiso)){
            try {
                this.menu.setVisible(false);
                int fila = this.tabla_general.getSelectedRow();
                String table_name=tabla_general.getValueAt(fila, 46).toString();
                String id = tabla_general.getValueAt(fila, 0).toString();
                pnl_add.id_control=id;
                new CambiaPanel(pnlPrincipal, new pnl_add());
                boton_registrar.setText("GUARDAR CAMBIOS");
                boton_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnGuardar.png")));
                boton_registrar1.setText("GUARDAR CAMBIOS");
                boton_registrar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnGuardar.png")));
                pnl_add.titulo_add.setText("Editar");
                if(table_name.equals("gestion_produccion")){
                    pnl_add.add_produccion.setSelected(true);
                    pnl_add.add_base.setEnabled(false);
                    pnl_add.add_aplicaciones.setEnabled(false);
                    pnl_add.add_comunicaciones.setEnabled(false);
                }else if(table_name.equals("sistema_base")){
                    pnl_add.add_base.setSelected(true);
                    pnl_add.add_produccion.setEnabled(false);
                    pnl_add.add_aplicaciones.setEnabled(false);
                    pnl_add.add_comunicaciones.setEnabled(false);
                }else if(table_name.equals("gestion_aplicaciones")){
                    pnl_add.add_aplicaciones.setSelected(true);
                    pnl_add.add_produccion.setEnabled(false);
                    pnl_add.add_base.setEnabled(false);
                    pnl_add.add_comunicaciones.setEnabled(false);
                }else if(table_name.equals("sistema_comunicaciones")){
                    pnl_add.add_comunicaciones.setSelected(true);
                    pnl_add.add_produccion.setEnabled(false);
                    pnl_add.add_base.setEnabled(false);
                    pnl_add.add_aplicaciones.setEnabled(false);
                }
                opciones_tabla_general.extraerDatos("select * from "+table_name+" WHERE id_goya='"+id+"'");
            } catch (SQLException ex) {
                Logger.getLogger(pnlHome.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(pnlHome.class.getName()).log(Level.SEVERE, null, ex);
            }
                    } else {
                        lanza_error_variable_sin_ex(mj1, mj2, mj3);
                    }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void baseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baseActionPerformed
        // TODO add your handling code here:
         if(produccion.isSelected()==false&&aplicaciones.isSelected()==false&&comunicaciones.isSelected()==false){
            base.setSelected(true);
            lanza_error_variable_sin_ex("", "Debe tener almenos una tabla marcada para mostrar sus datos", "");
        }else{
        if(!base.isSelected()){
         opciones_tabla_general.no_mostrar("sistema_base");
        }
        if(base.isSelected()){
             opciones_tabla_general.nombre_tabla="sistema_base";
        opciones_tabla_general.setListar(Principal.txt_buscar.getText(),"sistema_base");
        if(seleccionar_todos.isSelected()){
                 marcar_todos();
             }
        }
        } 
    }//GEN-LAST:event_baseActionPerformed

    private void produccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_produccionActionPerformed
        // TODO add your handling code here:
        if(base.isSelected()==false&&aplicaciones.isSelected()==false&&comunicaciones.isSelected()==false){
            produccion.setSelected(true);
            lanza_error_variable_sin_ex("", "Debe tener almenos una tabla marcada para mostrar sus datos", "");
        }else{
        if(!produccion.isSelected()){
        opciones_tabla_general.no_mostrar("gestion_produccion");
        }
        if(produccion.isSelected()){
             opciones_tabla_general.nombre_tabla="gestion_produccion";
        opciones_tabla_general.setListar(Principal.txt_buscar.getText(),"gestion_produccion");
        if(seleccionar_todos.isSelected()){
                 marcar_todos();
             }
        }
        }
    }//GEN-LAST:event_produccionActionPerformed

    private void aplicacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aplicacionesActionPerformed
        // TODO add your handling code here:
            if(base.isSelected()==false&&produccion.isSelected()==false&&comunicaciones.isSelected()==false){
            aplicaciones.setSelected(true);
                lanza_error_variable_sin_ex("", "Debe tener almenos una tabla marcada para mostrar sus datos", "");
        }else{
        if(!aplicaciones.isSelected()){
        opciones_tabla_general.no_mostrar("gestion_aplicaciones");
        }
            if(aplicaciones.isSelected()){
             opciones_tabla_general.nombre_tabla="gestion_aplicaciones";
        opciones_tabla_general.setListar(Principal.txt_buscar.getText(),"gestion_aplicaciones");
        if(seleccionar_todos.isSelected()){
                 marcar_todos();
             }
        }
        }
    }//GEN-LAST:event_aplicacionesActionPerformed

    private void comunicacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comunicacionesActionPerformed
        // TODO add your handling code here:
            if(base.isSelected()==false&&aplicaciones.isSelected()==false&&produccion.isSelected()==false){
            comunicaciones.setSelected(true);
            lanza_error_variable_sin_ex("", "Debe tener almenos una tabla marcada para mostrar sus datos", "");
        }else{
        if(!comunicaciones.isSelected()){
       opciones_tabla_general.no_mostrar("sistema_comunicaciones");
        }
       if(comunicaciones.isSelected()){
             opciones_tabla_general.nombre_tabla="sistema_comunicaciones";
        opciones_tabla_general.setListar(Principal.txt_buscar.getText(),"sistema_comunicaciones");
        if(seleccionar_todos.isSelected()){
                 marcar_todos();
             }
        }
        }
    }//GEN-LAST:event_comunicacionesActionPerformed
    
    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
    try {
        // TODO add your handling code here:
        for(int k=0;k<pnlHome.tabla_general.getRowCount();k++){
                if(pnlHome.tabla_general.getValueAt(k, 47).toString().equals("true")){
                        if(pnlHome.tabla_general.getValueAt(k, 46).toString().equals("gestion_produccion")){
                            ExcelGenerator.id_produccion.add(pnlHome.tabla_general.getValueAt(k, 0).toString());
                        }
                        if(pnlHome.tabla_general.getValueAt(k, 46).toString().equals("sistema_base")){
                            ExcelGenerator.id_base.add(pnlHome.tabla_general.getValueAt(k, 0).toString());
                        }
                        if(pnlHome.tabla_general.getValueAt(k, 46).toString().equals("gestion_aplicaciones")){
                            ExcelGenerator.id_aplicaciones.add(pnlHome.tabla_general.getValueAt(k, 0).toString());
                        }
                        if(pnlHome.tabla_general.getValueAt(k, 46).toString().equals("sistema_comunicaciones")){
                            ExcelGenerator.id_comunicaciones.add(pnlHome.tabla_general.getValueAt(k, 0).toString());
                        }
                    }
            }
        generarExcel();
        ExcelGenerator.id_produccion.clear();
        ExcelGenerator.id_base.clear();
        ExcelGenerator.id_aplicaciones.clear();
        ExcelGenerator.id_comunicaciones.clear();
    } catch (IOException ex) {
        Logger.getLogger(pnlHome.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jLabel1MouseClicked

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        // TODO add your handling code here:
         this.menu.setVisible(false);
         pnl_add.editable=false;
         try {
                this.menu.setVisible(false);
                int fila = this.tabla_general.getSelectedRow();
                String table_name=tabla_general.getValueAt(fila, 46).toString();
                String id = tabla_general.getValueAt(fila, 0).toString();
                pnl_add.id_control=id;
                new CambiaPanel(pnlPrincipal, new pnl_add());
                boton_registrar.setVisible(false);
                pnl_add.boton_registrar1.setVisible(false);
                pnl_add.boton_borrar_todo.setVisible(false);
                pnl_add.boton_borrar_todo1.setVisible(false);
                
                pnl_add.titulo_add.setText("CONSULTA");
                if(table_name.equals("gestion_produccion")){
                    pnl_add.add_produccion.setSelected(true);
                    pnl_add.add_base.setEnabled(false);
                    pnl_add.add_aplicaciones.setEnabled(false);
                    pnl_add.add_comunicaciones.setEnabled(false);
                }else if(table_name.equals("sistema_base")){
                    pnl_add.add_base.setSelected(true);
                    pnl_add.add_produccion.setEnabled(false);
                    pnl_add.add_aplicaciones.setEnabled(false);
                    pnl_add.add_comunicaciones.setEnabled(false);
                }else if(table_name.equals("gestion_aplicaciones")){
                    pnl_add.add_aplicaciones.setSelected(true);
                    pnl_add.add_produccion.setEnabled(false);
                    pnl_add.add_base.setEnabled(false);
                    pnl_add.add_comunicaciones.setEnabled(false);
                }else if(table_name.equals("sistema_comunicaciones")){
                    pnl_add.add_comunicaciones.setSelected(true);
                    pnl_add.add_produccion.setEnabled(false);
                    pnl_add.add_base.setEnabled(false);
                    pnl_add.add_aplicaciones.setEnabled(false);
                }
                opciones_tabla_general.extraerDatos("select * from "+table_name+" WHERE id_goya='"+id+"'");
                
            } catch (SQLException ex) {
                Logger.getLogger(pnlHome.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(pnlHome.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
    try {
        // TODO add your handling code here:
        int cont=0;
            
        ArrayList<datos_reporte> dato_list=new ArrayList<>();
        
        for(int k=0;k<pnlHome.tabla_general.getRowCount();k++){
            if(pnlHome.tabla_general.getValueAt(k, 47).toString().equals("true")){
                cont++;
                datos_reporte datos=new datos_reporte();
                
                if(pnlHome.tabla_general.getValueAt(k, 0)==null){
                    datos.setId_goya("");
                }else{
                    datos.setId_goya(pnlHome.tabla_general.getValueAt(k, 0).toString());
                }
                if(pnlHome.tabla_general.getValueAt(k, 1)==null){
                    datos.setNo_cxto("");
                }else{
                    datos.setNo_cxto(pnlHome.tabla_general.getValueAt(k, 1).toString());
                }
                if(pnlHome.tabla_general.getValueAt(k, 2)==null){
                    datos.setNo_de_expediente("");
                }else{
                    datos.setNo_de_expediente(pnlHome.tabla_general.getValueAt(k, 2).toString());
                }           
                if(pnlHome.tabla_general.getValueAt(k, 3)==null){
                    datos.setDescripcion("");
                }else{
                    datos.setDescripcion(pnlHome.tabla_general.getValueAt(k, 3).toString());
                }            
                if(pnlHome.tabla_general.getValueAt(k, 4)==null){
                    datos.setTipo_de_cxto("");
                }else{
                    datos.setTipo_de_cxto(pnlHome.tabla_general.getValueAt(k, 4).toString());
                }       
                if(pnlHome.tabla_general.getValueAt(k, 5)==null){
                    datos.setPrioridad("");
                }else{
                    datos.setPrioridad(pnlHome.tabla_general.getValueAt(k, 5).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 6)==null){
                    datos.setTipo_servicio_o_inversion("");
                }else{
                    datos.setTipo_servicio_o_inversion(pnlHome.tabla_general.getValueAt(k, 6).toString());
                }       
                if(pnlHome.tabla_general.getValueAt(k, 7)==null){
                    datos.setPromotor("");
                }else{
                    datos.setPromotor(pnlHome.tabla_general.getValueAt(k, 7).toString());
                }       
                if(pnlHome.tabla_general.getValueAt(k, 8)==null){
                    datos.setArea("");
                }else{
                    datos.setArea(pnlHome.tabla_general.getValueAt(k, 8).toString());
                }       
                if(pnlHome.tabla_general.getValueAt(k, 9)==null){
                    datos.setUnidad("");
                }else{
                    datos.setUnidad(pnlHome.tabla_general.getValueAt(k, 9).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 10)==null){
                    datos.setResp_area("");
                }else{
                    datos.setResp_area(pnlHome.tabla_general.getValueAt(k, 10).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 11)==null){
                    datos.setResp_unidad("");
                }else{
                    datos.setResp_unidad(pnlHome.tabla_general.getValueAt(k, 11).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 12)==null){
                    datos.setUnidad_auxiliar("");
                }else{
                    datos.setUnidad_auxiliar(pnlHome.tabla_general.getValueAt(k, 12).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 13)==null){
                    datos.setResponsable_auxiliar("");
                }else{
                    datos.setResponsable_auxiliar(pnlHome.tabla_general.getValueAt(k, 13).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 14)==null){
                    datos.setPresupuesto_base_sin_iva("");
                }else{
                    datos.setPresupuesto_base_sin_iva(pnlHome.tabla_general.getValueAt(k, 14).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 15)==null){
                    datos.setImporte_adjudicado_sin_iva("");
                }else{
                    datos.setImporte_adjudicado_sin_iva(pnlHome.tabla_general.getValueAt(k, 15).toString());
                }
                if(pnlHome.tabla_general.getValueAt(k, 16)==null){
                    datos.setEstado_expediente("");
                }else{
                    datos.setEstado_expediente(pnlHome.tabla_general.getValueAt(k, 16).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 17)==null){
                    datos.setMto_garantia("");
                }else{
                    datos.setMto_garantia(pnlHome.tabla_general.getValueAt(k, 17).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 18)==null){
                    datos.setTiempo_ejecucion("");
                }else{
                    datos.setTiempo_ejecucion(pnlHome.tabla_general.getValueAt(k, 18).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 19)==null){
                    datos.setInicio_garantia_aprox("");
                }else{
                    datos.setInicio_garantia_aprox(pnlHome.tabla_general.getValueAt(k, 19).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 19)==null){
                    datos.setFin_garantia_aprox("");
                }else{
                    datos.setFin_garantia_aprox(pnlHome.tabla_general.getValueAt(k, 19).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 21)==null){
                    datos.setAnos_prorrogable("");
                }else{
                    datos.setAnos_prorrogable(pnlHome.tabla_general.getValueAt(k, 21).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 22)==null){
                    datos.setAlarma("");
                }else{
                    datos.setAlarma(pnlHome.tabla_general.getValueAt(k, 22).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 23)==null){
                    datos.setFuturo_lote("");
                }else{
                    datos.setFuturo_lote(pnlHome.tabla_general.getValueAt(k, 23).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 24)==null){
                    datos.setProyecto("");
                }else{
                    datos.setProyecto(pnlHome.tabla_general.getValueAt(k, 24).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 25)==null){
                    datos.setEstado_de_garantia("");
                }else{
                    datos.setEstado_de_garantia(pnlHome.tabla_general.getValueAt(k, 25).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 26)==null){
                    datos.setPsado_a_mtos_incluida_en("");
                }else{
                    datos.setPsado_a_mtos_incluida_en(pnlHome.tabla_general.getValueAt(k, 26).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 27)==null){
                    datos.setSol_adquisicion("");
                }else{
                    datos.setSol_adquisicion(pnlHome.tabla_general.getValueAt(k, 27).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 28)==null){
                    datos.setMemoria_tecnica_validada("");
                }else{
                    datos.setMemoria_tecnica_validada(pnlHome.tabla_general.getValueAt(k, 28).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 29)==null){
                    datos.setDl_validado("");
                }else{
                    datos.setDl_validado(pnlHome.tabla_general.getValueAt(k, 29).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 30)==null){
                    datos.setNuevo_expte_cotec_de("");
                }else{
                    datos.setNuevo_expte_cotec_de(pnlHome.tabla_general.getValueAt(k, 30).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 31)==null){
                    datos.setTipo_expediente("");
                }else{
                    datos.setTipo_expediente(pnlHome.tabla_general.getValueAt(k, 31).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 32)==null){
                    datos.setProcedimiento("");
                }else{
                    datos.setProcedimiento(pnlHome.tabla_general.getValueAt(k,32).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 33)==null){
                    datos.setImporte_expediente("");
                }else{
                    datos.setImporte_expediente(pnlHome.tabla_general.getValueAt(k, 33).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 34)==null){
                    datos.setUlt_dia_prest_ofertas("");
                }else{
                    datos.setUlt_dia_prest_ofertas(pnlHome.tabla_general.getValueAt(k, 34).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 35)==null){
                    datos.setInforme_tecnico_realizado("");
                }else{
                    datos.setInforme_tecnico_realizado(pnlHome.tabla_general.getValueAt(k, 35).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 36)==null){
                    datos.setFecha_adjudicacion("");
                }else{
                    datos.setFecha_adjudicacion(pnlHome.tabla_general.getValueAt(k, 36).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 37)==null){
                    datos.setEmpresa_adjudicatoria("");
                }else{
                    datos.setEmpresa_adjudicatoria(pnlHome.tabla_general.getValueAt(k, 37).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 38)==null){
                    datos.setImporte_de_adjudicacion("");
                }else{
                    datos.setImporte_de_adjudicacion(pnlHome.tabla_general.getValueAt(k, 38).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 39)==null){
                    datos.setFecha_fornalizacion("");
                }else{
                    datos.setFecha_fornalizacion(pnlHome.tabla_general.getValueAt(k, 39).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 40)==null){
                    datos.setOtras_fechas("");
                }else{
                    datos.setOtras_fechas(pnlHome.tabla_general.getValueAt(k, 40).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 41)==null){
                    datos.setCapitulo("");
                }else{
                    datos.setCapitulo(pnlHome.tabla_general.getValueAt(k, 41).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 42)==null){
                    datos.setCertificados_a_nov_2020("");
                }else{
                    datos.setCertificados_a_nov_2020(pnlHome.tabla_general.getValueAt(k, 42).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 43)==null){
                    datos.setEstado_oocc_a_09_07_2021("");
                }else{
                    datos.setEstado_oocc_a_09_07_2021(pnlHome.tabla_general.getValueAt(k, 43).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 44)==null){
                    datos.setObservaciones("");
                }else{
                    datos.setObservaciones(pnlHome.tabla_general.getValueAt(k, 44).toString());
                }        
                if(pnlHome.tabla_general.getValueAt(k, 45)==null){
                    datos.setObservaciones_de_oya("");
                }else{
                    datos.setObservaciones_de_oya(pnlHome.tabla_general.getValueAt(k, 45).toString());
                }        
                        
                        
                dato_list.add(datos);
            }
        }
        if(cont>0){
        reportes.Reportes_box r = new reportes.Reportes_box();
        String ruta_logo="imagenes/logo.png";
        Map parametro = new HashMap();
        parametro.put("logo", ruta_logo);
        
        JasperPrint jprint = JasperFillManager.fillReport(this.getClass().getClassLoader().getResourceAsStream("reportes/final.jasper"), parametro, new JRBeanCollectionDataSource(dato_list));
        JRViewer jrv = new JRViewer(jprint);
        r.contenedor.removeAll();
        
        r.contenedor.setLayout(new BorderLayout());
        r.contenedor.add(jrv, BorderLayout.CENTER);
        
        r.contenedor.repaint();
        r.contenedor.revalidate();
        jrv.setVisible(true);
        r.setVisible(true);
        }else{
             ErrorAlert.lanza_error_variable_sin_ex("", "Debe existir almenos una fila seleccionada para exportar", "");
        }
    } catch (JRException ex) {
        Logger.getLogger(pnlHome.class.getName()).log(Level.SEVERE, null, ex);
    }
   
    }//GEN-LAST:event_jLabel2MouseClicked

   
    
   private void generarExcel() throws IOException, IOException {
       jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
       int cont=0;
            for(int k=0;k<pnlHome.tabla_general.getRowCount();k++){
                if(pnlHome.tabla_general.getValueAt(k, 47).toString().equals("true")){
                        cont++;
                    }
            }
            if(cont>0){
                HSSFWorkbook workbook = new excel.ExcelGenerator().generateExcel();
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos Excel (*.xls)", "xls");
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setFileFilter(filter);
        fileChooser.setDialogTitle("GUARDAR ARCHIVO");
        if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {

            try {
                File archivo = new File(fileChooser.getSelectedFile().getAbsolutePath());

                OutputStream out = null;
                if (getFileExtension(archivo)) {
                    out = new FileOutputStream(fileChooser.getSelectedFile().getAbsolutePath());
                } else {
                    out = new FileOutputStream(fileChooser.getSelectedFile().getAbsolutePath() + ".xls");
                }
                
                SuccessAlert s = new SuccessAlert(new JFrame(), true);
                        s.msj1.setText("");
                        s.msj2.setText("¡Datos exportados con éxito!");
                        s.msj3.setText("");
                        s.setVisible(true);

                workbook.write(out);
                workbook.close();
                out.flush();
                out.close();
                File excel = new File(archivo+".xls");
                // abrir excel recien creado
                Desktop.getDesktop().open(excel);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
            }else{
                        ErrorAlert.lanza_error_variable_sin_ex("", "Debe existir almenos una fila seleccionada para exportar", "");
                    }
            jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }
    
   private void generarPDF() throws IOException, IOException {
       jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
       int cont=0;
            for(int k=0;k<pnlHome.tabla_general.getRowCount();k++){
                if(pnlHome.tabla_general.getValueAt(k, 47).toString().equals("true")){
                        cont++;
                    }
            }
            if(cont>0){
                HSSFWorkbook workbook = new excel.ExcelGenerator().generateExcel();
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos PDF (*.pdf)", "pdf");
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setFileFilter(filter);
        fileChooser.setDialogTitle("GUARDAR ARCHIVO");
        if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {

            try {
                File archivo = new File(fileChooser.getSelectedFile().getAbsolutePath());

                OutputStream out = null;
                if (getFileExtension(archivo)) {
                    out = new FileOutputStream(fileChooser.getSelectedFile().getAbsolutePath());
                } else {
                    out = new FileOutputStream(fileChooser.getSelectedFile().getAbsolutePath() + ".pdf");
                }
                
                SuccessAlert s = new SuccessAlert(new JFrame(), true);
                        s.msj1.setText("");
                        s.msj2.setText("¡Datos exportados con éxito!");
                        s.msj3.setText("");
                        s.setVisible(true);

                workbook.write(out);
                workbook.close();
                out.flush();
                out.close();
                File excel = new File(archivo+".pdf");
                // abrir excel recien creado
                Desktop.getDesktop().open(excel);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
            }else{
                        ErrorAlert.lanza_error_variable_sin_ex("", "Debe existir almenos una fila seleccionada para exportar", "");
                    }
            jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }
   
   private boolean getFileExtension(File file) {
        String ext = null;
        String s = file.getName();
        int i = s.lastIndexOf('.');

        if (i > 0 && i < s.length() - 1) {
            ext = s.substring(i + 1).toLowerCase();
        }

        if (ext != null) {
            return true;
        } else {
            return false;
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JCheckBox aplicaciones;
    public static javax.swing.JCheckBox base;
    private rojeru_san.RSButtonRiple btnBorrar;
    private rojeru_san.RSButtonRiple btnConsultar;
    private rojeru_san.RSButtonRiple btnEditar;
    public static javax.swing.JCheckBox comunicaciones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private rojerusan.RSPopuMenu menu;
    private javax.swing.JPanel panel_selection;
    private javax.swing.JPanel pnlMenu1;
    public static javax.swing.JCheckBox produccion;
    private javax.swing.JScrollPane scroll;
    public static javax.swing.JCheckBox seleccionar_todos;
    public static rojerusan.RSTableMetro tabla_general;
    // End of variables declaration//GEN-END:variables
}
