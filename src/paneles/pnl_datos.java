/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paneles;

import alertas.ErrorAlert;
import alertas.SuccessAlert;
import alertas.combo_add_unidad;
import alertas.combo_autoseleccionado;
import esperas.Guardando_general;
import interaccion_BD.opciones_de_gestionar_datos_cargados;
import interaccion_BD.opciones_de_gestionar_usuarios;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.InputEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import principal.Principal;
import rojeru_san.complementos.RSUtilities;

/**
 *
 * @author 4l3
 */
public class pnl_datos extends javax.swing.JPanel {

    private int PosicionMouse;
    String nombre_tabla = "";
    String nombre_area_tabla_unidad = "";

    /**
     * Creates new form pnlHome
     */
    public pnl_datos() {
        initComponents();
        this.menu.add(pnlMenu);
        llena_tablas();
        Principal.txt_buscar.setVisible(false);
        lbl_error_datos.setVisible(false);
        boton_cancelar.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu = new rojerusan.RSPopuMenu();
        pnlMenu = new javax.swing.JPanel();
        btnBorrar = new rojeru_san.RSButtonRiple();
        btnEditar = new rojeru_san.RSButtonRiple();
        add_unidad = new rojeru_san.RSButtonRiple();
        scroll = new javax.swing.JScrollPane();
        tabla_area = new rojerusan.RSTableMetro();
        scroll1 = new javax.swing.JScrollPane();
        tabla_empresa_adjudicadora = new rojerusan.RSTableMetro();
        scroll2 = new javax.swing.JScrollPane();
        tabla_materia = new rojerusan.RSTableMetro();
        scroll3 = new javax.swing.JScrollPane();
        tabla_resp_unidad = new rojerusan.RSTableMetro();
        scroll4 = new javax.swing.JScrollPane();
        tabla_resp_area = new rojerusan.RSTableMetro();
        scroll5 = new javax.swing.JScrollPane();
        tabla_estado_expediente = new rojerusan.RSTableMetro();
        scroll6 = new javax.swing.JScrollPane();
        tabla_procedimiento = new rojerusan.RSTableMetro();
        scroll7 = new javax.swing.JScrollPane();
        tabla_tipo_xpediente = new rojerusan.RSTableMetro();
        scroll8 = new javax.swing.JScrollPane();
        tabla_promotor = new rojerusan.RSTableMetro();
        scroll9 = new javax.swing.JScrollPane();
        tabla_unidad = new rojerusan.RSTableMetro();
        scroll10 = new javax.swing.JScrollPane();
        tabla_prioridad = new rojerusan.RSTableMetro();
        scroll11 = new javax.swing.JScrollPane();
        tabla_tipo_cxto = new rojerusan.RSTableMetro();
        panel_selection2 = new javax.swing.JPanel();
        check_area = new javax.swing.JCheckBox();
        check_materia = new javax.swing.JCheckBox();
        check_empresa_adjuficatoria = new javax.swing.JCheckBox();
        check_estado_expediente = new javax.swing.JCheckBox();
        check_procedimiento = new javax.swing.JCheckBox();
        check_tipo_contexto = new javax.swing.JCheckBox();
        check_promotor = new javax.swing.JCheckBox();
        check_prioridad = new javax.swing.JCheckBox();
        panel_selection3 = new javax.swing.JPanel();
        check_tipo_expediente = new javax.swing.JCheckBox();
        check_seleccionar_todos = new javax.swing.JCheckBox();
        check_desmarcar_todos = new javax.swing.JCheckBox();
        datos = new rojeru_san.rsfield.RSTextMaterial();
        lbl_error_datos = new javax.swing.JLabel();
        boton_registrar = new rojeru_san.RSButtonRiple();
        boton_cancelar = new rojeru_san.RSButtonRiple();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        boton_registrar1 = new rojeru_san.RSButtonRiple();

        menu.setBackground(new java.awt.Color(255, 255, 255));
        menu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        pnlMenu.setBackground(new java.awt.Color(255, 255, 255));

        btnBorrar.setBackground(new java.awt.Color(69, 87, 252));
        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnEliminar.png"))); // NOI18N
        btnBorrar.setText("ELIMINAR");
        btnBorrar.setColorHover(new java.awt.Color(87, 103, 253));
        btnBorrar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnBorrar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnEditar.setBackground(new java.awt.Color(69, 87, 252));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnEditar.png"))); // NOI18N
        btnEditar.setText("EDITAR");
        btnEditar.setColorHover(new java.awt.Color(87, 103, 253));
        btnEditar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        add_unidad.setBackground(new java.awt.Color(69, 87, 252));
        add_unidad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnRegistrar.png"))); // NOI18N
        add_unidad.setText("AGREGAR");
        add_unidad.setColorHover(new java.awt.Color(87, 103, 253));
        add_unidad.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        add_unidad.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        add_unidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_unidadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMenuLayout = new javax.swing.GroupLayout(pnlMenu);
        pnlMenu.setLayout(pnlMenuLayout);
        pnlMenuLayout.setHorizontalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(add_unidad, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pnlMenuLayout.setVerticalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(add_unidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setBackground(new java.awt.Color(255, 255, 255));

        scroll.setBorder(null);

        tabla_area.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "√Årea"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_area.setToolTipText("");
        tabla_area.setAltoHead(30);
        tabla_area.setColorBackgoundHead(new java.awt.Color(38, 86, 186));
        tabla_area.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tabla_area.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabla_area.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tabla_area.setColorHoverBackgound(new java.awt.Color(69, 87, 252));
        tabla_area.setColorSelBackgound(new java.awt.Color(69, 87, 252));
        tabla_area.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla_area.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabla_area.setGrosorBordeFilas(0);
        tabla_area.setHover(true);
        tabla_area.setMultipleSeleccion(false);
        tabla_area.setRowHeight(30);
        tabla_area.setSelectionBackground(new java.awt.Color(99, 70, 250));
        tabla_area.getTableHeader().setReorderingAllowed(false);
        tabla_area.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_areaMouseClicked(evt);
            }
        });
        scroll.setViewportView(tabla_area);
        tabla_area.getAccessibleContext().setAccessibleName("");

        scroll1.setBorder(null);

        tabla_empresa_adjudicadora.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Empresa Adjudicatoria"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_empresa_adjudicadora.setToolTipText("");
        tabla_empresa_adjudicadora.setAltoHead(30);
        tabla_empresa_adjudicadora.setColorBackgoundHead(new java.awt.Color(38, 86, 186));
        tabla_empresa_adjudicadora.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tabla_empresa_adjudicadora.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabla_empresa_adjudicadora.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tabla_empresa_adjudicadora.setColorHoverBackgound(new java.awt.Color(69, 87, 252));
        tabla_empresa_adjudicadora.setColorSelBackgound(new java.awt.Color(69, 87, 252));
        tabla_empresa_adjudicadora.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla_empresa_adjudicadora.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabla_empresa_adjudicadora.setGrosorBordeFilas(0);
        tabla_empresa_adjudicadora.setHover(true);
        tabla_empresa_adjudicadora.setMultipleSeleccion(false);
        tabla_empresa_adjudicadora.setRowHeight(30);
        tabla_empresa_adjudicadora.setSelectionBackground(new java.awt.Color(99, 70, 250));
        tabla_empresa_adjudicadora.getTableHeader().setReorderingAllowed(false);
        tabla_empresa_adjudicadora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_empresa_adjudicadoraMouseClicked(evt);
            }
        });
        scroll1.setViewportView(tabla_empresa_adjudicadora);
        tabla_empresa_adjudicadora.getAccessibleContext().setAccessibleName("are");

        scroll2.setBorder(null);

        tabla_materia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Materia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_materia.setToolTipText("");
        tabla_materia.setAltoHead(30);
        tabla_materia.setColorBackgoundHead(new java.awt.Color(38, 86, 186));
        tabla_materia.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tabla_materia.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabla_materia.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tabla_materia.setColorHoverBackgound(new java.awt.Color(69, 87, 252));
        tabla_materia.setColorSelBackgound(new java.awt.Color(69, 87, 252));
        tabla_materia.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla_materia.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabla_materia.setGrosorBordeFilas(0);
        tabla_materia.setHover(true);
        tabla_materia.setMultipleSeleccion(false);
        tabla_materia.setRowHeight(30);
        tabla_materia.setSelectionBackground(new java.awt.Color(99, 70, 250));
        tabla_materia.getTableHeader().setReorderingAllowed(false);
        tabla_materia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_materiaMouseClicked(evt);
            }
        });
        scroll2.setViewportView(tabla_materia);

        scroll3.setBorder(null);

        tabla_resp_unidad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Resp Unidad", "Unidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_resp_unidad.setToolTipText("");
        tabla_resp_unidad.setAltoHead(30);
        tabla_resp_unidad.setColorBackgoundHead(new java.awt.Color(38, 86, 186));
        tabla_resp_unidad.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tabla_resp_unidad.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabla_resp_unidad.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tabla_resp_unidad.setColorHoverBackgound(new java.awt.Color(69, 87, 252));
        tabla_resp_unidad.setColorSelBackgound(new java.awt.Color(69, 87, 252));
        tabla_resp_unidad.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla_resp_unidad.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabla_resp_unidad.setGrosorBordeFilas(0);
        tabla_resp_unidad.setHover(true);
        tabla_resp_unidad.setMultipleSeleccion(false);
        tabla_resp_unidad.setRowHeight(30);
        tabla_resp_unidad.setSelectionBackground(new java.awt.Color(99, 70, 250));
        tabla_resp_unidad.getTableHeader().setReorderingAllowed(false);
        tabla_resp_unidad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_resp_unidadMouseClicked(evt);
            }
        });
        scroll3.setViewportView(tabla_resp_unidad);

        scroll4.setBorder(null);

        tabla_resp_area.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Resp √Årea", "Area"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_resp_area.setToolTipText("");
        tabla_resp_area.setAltoHead(30);
        tabla_resp_area.setColorBackgoundHead(new java.awt.Color(38, 86, 186));
        tabla_resp_area.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tabla_resp_area.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabla_resp_area.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tabla_resp_area.setColorHoverBackgound(new java.awt.Color(69, 87, 252));
        tabla_resp_area.setColorSelBackgound(new java.awt.Color(69, 87, 252));
        tabla_resp_area.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla_resp_area.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabla_resp_area.setGrosorBordeFilas(0);
        tabla_resp_area.setHover(true);
        tabla_resp_area.setMultipleSeleccion(false);
        tabla_resp_area.setRowHeight(30);
        tabla_resp_area.setSelectionBackground(new java.awt.Color(99, 70, 250));
        tabla_resp_area.getTableHeader().setReorderingAllowed(false);
        tabla_resp_area.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_resp_areaMouseClicked(evt);
            }
        });
        scroll4.setViewportView(tabla_resp_area);

        scroll5.setBorder(null);

        tabla_estado_expediente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Estado Expediente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_estado_expediente.setToolTipText("");
        tabla_estado_expediente.setAltoHead(30);
        tabla_estado_expediente.setColorBackgoundHead(new java.awt.Color(38, 86, 186));
        tabla_estado_expediente.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tabla_estado_expediente.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabla_estado_expediente.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tabla_estado_expediente.setColorHoverBackgound(new java.awt.Color(69, 87, 252));
        tabla_estado_expediente.setColorSelBackgound(new java.awt.Color(69, 87, 252));
        tabla_estado_expediente.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla_estado_expediente.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabla_estado_expediente.setGrosorBordeFilas(0);
        tabla_estado_expediente.setHover(true);
        tabla_estado_expediente.setMultipleSeleccion(false);
        tabla_estado_expediente.setRowHeight(30);
        tabla_estado_expediente.setSelectionBackground(new java.awt.Color(99, 70, 250));
        tabla_estado_expediente.getTableHeader().setReorderingAllowed(false);
        tabla_estado_expediente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_estado_expedienteMouseClicked(evt);
            }
        });
        scroll5.setViewportView(tabla_estado_expediente);

        scroll6.setBorder(null);

        tabla_procedimiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Procedimiento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_procedimiento.setToolTipText("");
        tabla_procedimiento.setAltoHead(30);
        tabla_procedimiento.setColorBackgoundHead(new java.awt.Color(38, 86, 186));
        tabla_procedimiento.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tabla_procedimiento.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabla_procedimiento.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tabla_procedimiento.setColorHoverBackgound(new java.awt.Color(69, 87, 252));
        tabla_procedimiento.setColorSelBackgound(new java.awt.Color(69, 87, 252));
        tabla_procedimiento.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla_procedimiento.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabla_procedimiento.setGrosorBordeFilas(0);
        tabla_procedimiento.setHover(true);
        tabla_procedimiento.setMultipleSeleccion(false);
        tabla_procedimiento.setRowHeight(30);
        tabla_procedimiento.setSelectionBackground(new java.awt.Color(99, 70, 250));
        tabla_procedimiento.getTableHeader().setReorderingAllowed(false);
        tabla_procedimiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_procedimientoMouseClicked(evt);
            }
        });
        scroll6.setViewportView(tabla_procedimiento);

        scroll7.setBorder(null);

        tabla_tipo_xpediente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo Expediente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_tipo_xpediente.setToolTipText("");
        tabla_tipo_xpediente.setAltoHead(30);
        tabla_tipo_xpediente.setColorBackgoundHead(new java.awt.Color(38, 86, 186));
        tabla_tipo_xpediente.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tabla_tipo_xpediente.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabla_tipo_xpediente.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tabla_tipo_xpediente.setColorHoverBackgound(new java.awt.Color(69, 87, 252));
        tabla_tipo_xpediente.setColorSelBackgound(new java.awt.Color(69, 87, 252));
        tabla_tipo_xpediente.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla_tipo_xpediente.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabla_tipo_xpediente.setGrosorBordeFilas(0);
        tabla_tipo_xpediente.setHover(true);
        tabla_tipo_xpediente.setMultipleSeleccion(false);
        tabla_tipo_xpediente.setRowHeight(30);
        tabla_tipo_xpediente.setSelectionBackground(new java.awt.Color(99, 70, 250));
        tabla_tipo_xpediente.getTableHeader().setReorderingAllowed(false);
        tabla_tipo_xpediente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_tipo_xpedienteMouseClicked(evt);
            }
        });
        scroll7.setViewportView(tabla_tipo_xpediente);

        scroll8.setBorder(null);

        tabla_promotor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Promotor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_promotor.setToolTipText("");
        tabla_promotor.setAltoHead(30);
        tabla_promotor.setColorBackgoundHead(new java.awt.Color(38, 86, 186));
        tabla_promotor.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tabla_promotor.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabla_promotor.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tabla_promotor.setColorHoverBackgound(new java.awt.Color(69, 87, 252));
        tabla_promotor.setColorSelBackgound(new java.awt.Color(69, 87, 252));
        tabla_promotor.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla_promotor.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabla_promotor.setGrosorBordeFilas(0);
        tabla_promotor.setHover(true);
        tabla_promotor.setMultipleSeleccion(false);
        tabla_promotor.setRowHeight(30);
        tabla_promotor.setSelectionBackground(new java.awt.Color(99, 70, 250));
        tabla_promotor.getTableHeader().setReorderingAllowed(false);
        tabla_promotor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_promotorMouseClicked(evt);
            }
        });
        scroll8.setViewportView(tabla_promotor);

        scroll9.setBorder(null);

        tabla_unidad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Unidad", "Area"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_unidad.setToolTipText("");
        tabla_unidad.setAltoHead(30);
        tabla_unidad.setColorBackgoundHead(new java.awt.Color(38, 86, 186));
        tabla_unidad.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tabla_unidad.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabla_unidad.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tabla_unidad.setColorHoverBackgound(new java.awt.Color(69, 87, 252));
        tabla_unidad.setColorSelBackgound(new java.awt.Color(69, 87, 252));
        tabla_unidad.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla_unidad.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabla_unidad.setGrosorBordeFilas(0);
        tabla_unidad.setHover(true);
        tabla_unidad.setMultipleSeleccion(false);
        tabla_unidad.setRowHeight(30);
        tabla_unidad.setSelectionBackground(new java.awt.Color(99, 70, 250));
        tabla_unidad.getTableHeader().setReorderingAllowed(false);
        tabla_unidad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_unidadMouseClicked(evt);
            }
        });
        scroll9.setViewportView(tabla_unidad);

        scroll10.setBorder(null);

        tabla_prioridad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Prioridad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_prioridad.setToolTipText("");
        tabla_prioridad.setAltoHead(30);
        tabla_prioridad.setColorBackgoundHead(new java.awt.Color(38, 86, 186));
        tabla_prioridad.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tabla_prioridad.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabla_prioridad.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tabla_prioridad.setColorHoverBackgound(new java.awt.Color(69, 87, 252));
        tabla_prioridad.setColorSelBackgound(new java.awt.Color(69, 87, 252));
        tabla_prioridad.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla_prioridad.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabla_prioridad.setGrosorBordeFilas(0);
        tabla_prioridad.setHover(true);
        tabla_prioridad.setMultipleSeleccion(false);
        tabla_prioridad.setRowHeight(30);
        tabla_prioridad.setSelectionBackground(new java.awt.Color(99, 70, 250));
        tabla_prioridad.getTableHeader().setReorderingAllowed(false);
        tabla_prioridad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_prioridadMouseClicked(evt);
            }
        });
        scroll10.setViewportView(tabla_prioridad);

        scroll11.setBorder(null);

        tabla_tipo_cxto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo de Cxto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_tipo_cxto.setToolTipText("");
        tabla_tipo_cxto.setAltoHead(30);
        tabla_tipo_cxto.setColorBackgoundHead(new java.awt.Color(38, 86, 186));
        tabla_tipo_cxto.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tabla_tipo_cxto.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabla_tipo_cxto.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tabla_tipo_cxto.setColorHoverBackgound(new java.awt.Color(69, 87, 252));
        tabla_tipo_cxto.setColorSelBackgound(new java.awt.Color(69, 87, 252));
        tabla_tipo_cxto.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla_tipo_cxto.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabla_tipo_cxto.setGrosorBordeFilas(0);
        tabla_tipo_cxto.setHover(true);
        tabla_tipo_cxto.setMultipleSeleccion(false);
        tabla_tipo_cxto.setRowHeight(30);
        tabla_tipo_cxto.setSelectionBackground(new java.awt.Color(99, 70, 250));
        tabla_tipo_cxto.getTableHeader().setReorderingAllowed(false);
        tabla_tipo_cxto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_tipo_cxtoMouseClicked(evt);
            }
        });
        scroll11.setViewportView(tabla_tipo_cxto);

        panel_selection2.setOpaque(false);

        check_area.setBackground(new java.awt.Color(255, 255, 255));
        check_area.setForeground(new java.awt.Color(0, 0, 0));
        check_area.setText("√ÅREA");
        check_area.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        check_area.setIconTextGap(12);
        check_area.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        panel_selection2.add(check_area);

        check_materia.setBackground(new java.awt.Color(255, 255, 255));
        check_materia.setForeground(new java.awt.Color(0, 0, 0));
        check_materia.setText("MATERIA");
        check_materia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        check_materia.setIconTextGap(12);
        check_materia.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        panel_selection2.add(check_materia);

        check_empresa_adjuficatoria.setBackground(new java.awt.Color(255, 255, 255));
        check_empresa_adjuficatoria.setForeground(new java.awt.Color(0, 0, 0));
        check_empresa_adjuficatoria.setText("EMPRESA ADJUDICATORIA");
        check_empresa_adjuficatoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        check_empresa_adjuficatoria.setIconTextGap(12);
        check_empresa_adjuficatoria.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        panel_selection2.add(check_empresa_adjuficatoria);

        check_estado_expediente.setBackground(new java.awt.Color(255, 255, 255));
        check_estado_expediente.setForeground(new java.awt.Color(0, 0, 0));
        check_estado_expediente.setText("ESTADO EXPEDIENTE");
        check_estado_expediente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        check_estado_expediente.setIconTextGap(12);
        check_estado_expediente.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        panel_selection2.add(check_estado_expediente);

        check_procedimiento.setBackground(new java.awt.Color(255, 255, 255));
        check_procedimiento.setForeground(new java.awt.Color(0, 0, 0));
        check_procedimiento.setText("PROCEDIMIENTO");
        check_procedimiento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        check_procedimiento.setIconTextGap(12);
        check_procedimiento.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        panel_selection2.add(check_procedimiento);

        check_tipo_contexto.setBackground(new java.awt.Color(255, 255, 255));
        check_tipo_contexto.setForeground(new java.awt.Color(0, 0, 0));
        check_tipo_contexto.setText("TIPO DE CONTEXTO");
        check_tipo_contexto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        check_tipo_contexto.setIconTextGap(12);
        check_tipo_contexto.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        panel_selection2.add(check_tipo_contexto);

        check_promotor.setBackground(new java.awt.Color(255, 255, 255));
        check_promotor.setForeground(new java.awt.Color(0, 0, 0));
        check_promotor.setText("PROMOTOR");
        check_promotor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        check_promotor.setIconTextGap(12);
        check_promotor.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        panel_selection2.add(check_promotor);

        check_prioridad.setBackground(new java.awt.Color(255, 255, 255));
        check_prioridad.setForeground(new java.awt.Color(0, 0, 0));
        check_prioridad.setText("PRIORIDAD");
        check_prioridad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        check_prioridad.setIconTextGap(12);
        check_prioridad.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        panel_selection2.add(check_prioridad);

        panel_selection3.setOpaque(false);

        check_tipo_expediente.setBackground(new java.awt.Color(255, 255, 255));
        check_tipo_expediente.setForeground(new java.awt.Color(0, 0, 0));
        check_tipo_expediente.setText("TIPO EXPEDIENTE");
        check_tipo_expediente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        check_tipo_expediente.setIconTextGap(12);
        check_tipo_expediente.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        panel_selection3.add(check_tipo_expediente);

        check_seleccionar_todos.setBackground(new java.awt.Color(255, 255, 255));
        check_seleccionar_todos.setForeground(new java.awt.Color(0, 0, 0));
        check_seleccionar_todos.setText("SELECCIONAR TODOS");
        check_seleccionar_todos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        check_seleccionar_todos.setIconTextGap(12);
        check_seleccionar_todos.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        check_seleccionar_todos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_seleccionar_todosActionPerformed(evt);
            }
        });
        panel_selection3.add(check_seleccionar_todos);

        check_desmarcar_todos.setBackground(new java.awt.Color(255, 255, 255));
        check_desmarcar_todos.setForeground(new java.awt.Color(0, 0, 0));
        check_desmarcar_todos.setText("DESMARCAR TODOS");
        check_desmarcar_todos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        check_desmarcar_todos.setIconTextGap(12);
        check_desmarcar_todos.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        check_desmarcar_todos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_desmarcar_todosActionPerformed(evt);
            }
        });
        panel_selection3.add(check_desmarcar_todos);

        datos.setForeground(new java.awt.Color(0, 0, 0));
        datos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        datos.setColorMaterial(new java.awt.Color(99, 70, 250));
        datos.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        datos.setPlaceholder("Dato");
        datos.setSelectionColor(new java.awt.Color(38, 86, 186));
        datos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                datosKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                datosKeyTyped(evt);
            }
        });

        lbl_error_datos.setForeground(new java.awt.Color(243, 66, 53));
        lbl_error_datos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_error_datos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/label-error-backup.png"))); // NOI18N
        lbl_error_datos.setText("¬°Dato no V√°lido!");

        boton_registrar.setBackground(new java.awt.Color(38, 86, 186));
        boton_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnRegistrar.png"))); // NOI18N
        boton_registrar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        boton_registrar.setLabel("REGISTRAR");
        boton_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_registrarActionPerformed(evt);
            }
        });

        boton_cancelar.setBackground(new java.awt.Color(255, 51, 51));
        boton_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btn-cancelar.png"))); // NOI18N
        boton_cancelar.setText("CANCELAR");
        boton_cancelar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        boton_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_cancelarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(128, 128, 131));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Datos Cargados");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        boton_registrar1.setBackground(new java.awt.Color(38, 86, 186));
        boton_registrar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnRegistrar.png"))); // NOI18N
        boton_registrar1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        boton_registrar1.setLabel("REGISTRAR");
        boton_registrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_registrar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(boton_registrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(boton_registrar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panel_selection2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panel_selection3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(datos, javax.swing.GroupLayout.DEFAULT_SIZE, 733, Short.MAX_VALUE)
                                    .addComponent(lbl_error_datos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 325, Short.MAX_VALUE)
                                .addComponent(boton_registrar, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(boton_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 326, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(scroll7, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(scroll9, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(scroll3, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(scroll11, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(scroll8, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(scroll10, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(scroll4, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(scroll5, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(scroll6, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(scroll2, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(scroll1, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)))
                                .addGap(15, 15, 15)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(scroll2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(scroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scroll4, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(scroll5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(scroll6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scroll11, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(scroll8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(scroll10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scroll7, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(scroll9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(scroll3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(25, 25, 25)
                .addComponent(panel_selection2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panel_selection3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(lbl_error_datos)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton_registrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boton_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(137, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void llena_tablas() {
        String sql = "select area from lista_area";
        opciones_de_gestionar_datos_cargados.setListar(tabla_area, "lista_area", "select area from lista_area");
        opciones_de_gestionar_datos_cargados.setListar(tabla_empresa_adjudicadora, "lista_empresa_adjudicadoria", "select * from lista_empresa_adjudicadoria");
        opciones_de_gestionar_datos_cargados.setListar(tabla_estado_expediente, "lista_estado_expediente", "select * from lista_estado_expediente");
        opciones_de_gestionar_datos_cargados.setListar(tabla_materia, "lista_materia", "select * from lista_materia");
        opciones_de_gestionar_datos_cargados.setListar(tabla_prioridad, "lista_prioridad", "select * from lista_prioridad");
        opciones_de_gestionar_datos_cargados.setListar(tabla_procedimiento, "lista_procedimiento", "select * from lista_materia");
        opciones_de_gestionar_datos_cargados.setListar(tabla_promotor, "lista_promotor", "select * from lista_promotor");
        opciones_de_gestionar_datos_cargados.setListar2Columnas(tabla_resp_area, "lista_area", "select resp_area, area from lista_area");
        opciones_de_gestionar_datos_cargados.setListar2Columnas(tabla_resp_unidad, "lista_unidad", "select resp_unidad, unidad from lista_unidad group by resp_unidad, unidad order by resp_unidad");
        opciones_de_gestionar_datos_cargados.setListar(tabla_tipo_cxto, "lista_tipo_contexto", "select * from lista_tipo_contexto");
        opciones_de_gestionar_datos_cargados.setListar(tabla_tipo_xpediente, "lista_tipo_expediente", "select * from lista_tipo_expediente");
        opciones_de_gestionar_datos_cargados.setListar2Columnas(tabla_unidad, "lista_unidad", "select unidad, area from lista_unidad group by unidad, area order by unidad");
    }

    private void tabla_resp_areaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_resp_areaMouseClicked
        // TODO add your handling code here:
        int row = tabla_resp_area.rowAtPoint(evt.getPoint());
        nombre_tabla = "tabla_resp_area";
        if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            tabla_resp_area.setRowSelectionInterval(row, row);
            PosicionMouse = evt.getY() / 16;
            esconde_opcion(nombre_tabla);
            menu.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            tabla_resp_area.setRowSelectionInterval(row, row);
        }
        
    }//GEN-LAST:event_tabla_resp_areaMouseClicked

    private void tabla_estado_expedienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_estado_expedienteMouseClicked
        // TODO add your handling code here:
        int row = tabla_estado_expediente.rowAtPoint(evt.getPoint());
        nombre_tabla = "tabla_estado_expediente";
        if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            tabla_estado_expediente.setRowSelectionInterval(row, row);
            PosicionMouse = evt.getY() / 16;
            esconde_opcion(nombre_tabla);
            menu.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            tabla_estado_expediente.setRowSelectionInterval(row, row);
        }
        
    }//GEN-LAST:event_tabla_estado_expedienteMouseClicked

    private void tabla_procedimientoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_procedimientoMouseClicked
        // TODO add your handling code here:
        int row = tabla_procedimiento.rowAtPoint(evt.getPoint());
        nombre_tabla = "tabla_procedimiento";
        if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            tabla_procedimiento.setRowSelectionInterval(row, row);
            PosicionMouse = evt.getY() / 16;
            esconde_opcion(nombre_tabla);
            menu.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            tabla_procedimiento.setRowSelectionInterval(row, row);
        }
        
    }//GEN-LAST:event_tabla_procedimientoMouseClicked

    private void tabla_tipo_xpedienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_tipo_xpedienteMouseClicked
        // TODO add your handling code here:
        int row = tabla_tipo_xpediente.rowAtPoint(evt.getPoint());
        if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            tabla_tipo_xpediente.setRowSelectionInterval(row, row);
            PosicionMouse = evt.getY() / 16;
            esconde_opcion("tabla_tipo_xpediente");
            menu.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            tabla_tipo_xpediente.setRowSelectionInterval(row, row);
        }
        nombre_tabla = "tabla_tipo_xpediente";
    }//GEN-LAST:event_tabla_tipo_xpedienteMouseClicked

    private void tabla_promotorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_promotorMouseClicked
        // TODO add your handling code here:
        int row = tabla_promotor.rowAtPoint(evt.getPoint());
        nombre_tabla = "tabla_promotor";
        if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            tabla_promotor.setRowSelectionInterval(row, row);
            PosicionMouse = evt.getY() / 16;
            esconde_opcion(nombre_tabla);
            menu.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            tabla_promotor.setRowSelectionInterval(row, row);
        }
        
    }//GEN-LAST:event_tabla_promotorMouseClicked

    private void tabla_unidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_unidadMouseClicked
        // TODO add your handling code here:
        int row = tabla_unidad.rowAtPoint(evt.getPoint());
        nombre_tabla = "tabla_unidad";
        if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            tabla_unidad.setRowSelectionInterval(row, row);
            nombre_area_tabla_unidad=tabla_unidad.getValueAt(row, 1).toString();
            PosicionMouse = evt.getY() / 16;
            esconde_opcion(nombre_tabla);
            menu.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            tabla_unidad.setRowSelectionInterval(row, row);
        }
        
    }//GEN-LAST:event_tabla_unidadMouseClicked

    private void tabla_prioridadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_prioridadMouseClicked
        // TODO add your handling code here:
        int row = tabla_prioridad.rowAtPoint(evt.getPoint());
        nombre_tabla = "tabla_prioridad";
        if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            tabla_prioridad.setRowSelectionInterval(row, row);
            PosicionMouse = evt.getY() / 16;
            esconde_opcion(nombre_tabla);
            menu.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            tabla_prioridad.setRowSelectionInterval(row, row);
        }
        
    }//GEN-LAST:event_tabla_prioridadMouseClicked

    private void tabla_tipo_cxtoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_tipo_cxtoMouseClicked
        // TODO add your handling code here:
        int row = tabla_tipo_cxto.rowAtPoint(evt.getPoint());
        nombre_tabla = "tabla_tipo_cxto";
        if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            tabla_tipo_cxto.setRowSelectionInterval(row, row);
            PosicionMouse = evt.getY() / 16;
            esconde_opcion(nombre_tabla);
            menu.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            tabla_tipo_cxto.setRowSelectionInterval(row, row);
        }
        nombre_tabla = "tabla_tipo_cxto";
    }//GEN-LAST:event_tabla_tipo_cxtoMouseClicked

    private void tabla_resp_unidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_resp_unidadMouseClicked
        // TODO add your handling code here:
        int row = tabla_resp_unidad.rowAtPoint(evt.getPoint());
        if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            tabla_resp_unidad.setRowSelectionInterval(row, row);
            PosicionMouse = evt.getY() / 16;
            esconde_opcion("tabla_resp_unidad");
            menu.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            tabla_resp_unidad.setRowSelectionInterval(row, row);
        }
        nombre_tabla = "tabla_resp_unidad";

    }//GEN-LAST:event_tabla_resp_unidadMouseClicked

    private void tabla_empresa_adjudicadoraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_empresa_adjudicadoraMouseClicked
        // TODO add your handling code here:
        int row = tabla_empresa_adjudicadora.rowAtPoint(evt.getPoint());
        nombre_tabla = "tabla_empresa_adjudicadora";
        if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            tabla_empresa_adjudicadora.setRowSelectionInterval(row, row);
            PosicionMouse = evt.getY() / 16;
            esconde_opcion(nombre_tabla);
            menu.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            tabla_empresa_adjudicadora.setRowSelectionInterval(row, row);
        }
        
    }//GEN-LAST:event_tabla_empresa_adjudicadoraMouseClicked

    private void tabla_materiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_materiaMouseClicked
        // TODO add your handling code here:
        int row = tabla_materia.rowAtPoint(evt.getPoint());
        nombre_tabla = "tabla_materia";
        if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            tabla_materia.setRowSelectionInterval(row, row);
            PosicionMouse = evt.getY() / 16;
            esconde_opcion(nombre_tabla);
            menu.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            tabla_materia.setRowSelectionInterval(row, row);
        }
        
    }//GEN-LAST:event_tabla_materiaMouseClicked
    private void esconde_opcion (String tabla){
        if(tabla.equals("tabla_unidad")){
            pnlMenu.getComponent(2).setVisible(true);
        }else{
            pnlMenu.getComponent(2).setVisible(false);
        }
    }
    private void tabla_areaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_areaMouseClicked
        int row = tabla_area.rowAtPoint(evt.getPoint());
        nombre_tabla = "tabla_area";
        if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            tabla_area.setRowSelectionInterval(row, row);
            PosicionMouse = evt.getY() / 16;
            esconde_opcion(nombre_tabla);
            menu.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            tabla_area.setRowSelectionInterval(row, row);
        }
        
    }//GEN-LAST:event_tabla_areaMouseClicked

    private class BotonPulsadoListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            datos.setText("Has pulsado el bot√≥n " + e.getActionCommand());
        }
    }

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed

        this.menu.setVisible(false);
        String nombre = "";
        String columna = "";
        String tabla_bd = "";
        if (nombre_tabla.equals("tabla_area")) {
            int fila = this.tabla_area.getSelectedRow();
            nombre = this.tabla_area.getValueAt(fila, 0).toString().trim();
            columna = "area";
        }
        if (nombre_tabla.equals("tabla_materia")) {
            int fila = this.tabla_materia.getSelectedRow();
            nombre = this.tabla_materia.getValueAt(fila, 0).toString().trim();
            columna = "materia";
            tabla_bd = "lista_materia";
        }
        if (nombre_tabla.equals("tabla_empresa_adjudicadora")) {
            int fila = this.tabla_empresa_adjudicadora.getSelectedRow();
            nombre = this.tabla_empresa_adjudicadora.getValueAt(fila, 0).toString().trim();
            columna = "empresa_adjudicatoria";
            tabla_bd = "lista_empresa_adjudicadoria";
        }
        if (nombre_tabla.equals("tabla_resp_area")) {
            int fila = this.tabla_resp_area.getSelectedRow();
            nombre = this.tabla_resp_area.getValueAt(fila, 0).toString().trim();
            columna = "resp_area";
        }
        if (nombre_tabla.equals("tabla_estado_expediente")) {
            int fila = this.tabla_estado_expediente.getSelectedRow();
            nombre = this.tabla_estado_expediente.getValueAt(fila, 0).toString().trim();
            columna = "estado_expediente";
            tabla_bd = "lista_estado_expediente";
        }
        if (nombre_tabla.equals("tabla_procedimiento")) {
            int fila = this.tabla_procedimiento.getSelectedRow();
            nombre = this.tabla_procedimiento.getValueAt(fila, 0).toString().trim();
            columna = "procedimiento";
            tabla_bd = "lista_procedimiento";
        }
        if (nombre_tabla.equals("tabla_tipo_cxto")) {
            int fila = this.tabla_tipo_cxto.getSelectedRow();
            nombre = this.tabla_tipo_cxto.getValueAt(fila, 0).toString().trim();
            columna = "tipo_contexto";
            tabla_bd = "lista_tipo_contexto";
        }
        if (nombre_tabla.equals("tabla_promotor")) {
            int fila = this.tabla_promotor.getSelectedRow();
            nombre = this.tabla_promotor.getValueAt(fila, 0).toString().trim();
            columna = "promotor";
            tabla_bd = "lista_promotor";
        }
        if (nombre_tabla.equals("tabla_prioridad")) {
            int fila = this.tabla_prioridad.getSelectedRow();
            nombre = this.tabla_prioridad.getValueAt(fila, 0).toString().trim();
            columna = "prioridad";
            tabla_bd = "lista_prioridad";
        }
        if (nombre_tabla.equals("tabla_tipo_xpediente")) {
            int fila = this.tabla_tipo_xpediente.getSelectedRow();
            nombre = this.tabla_tipo_xpediente.getValueAt(fila, 0).toString().trim();
            columna = "tipo_expediente";
            tabla_bd = "lista_tipo_expediente";
        }
        if (nombre_tabla.equals("tabla_unidad")) {
            int fila = this.tabla_unidad.getSelectedRow();
            nombre = this.tabla_unidad.getValueAt(fila, 0).toString().trim();
            columna = "unidad";
        }
        if (nombre_tabla.equals("tabla_resp_unidad")) {
            int fila = this.tabla_resp_unidad.getSelectedRow();
            nombre = this.tabla_resp_unidad.getValueAt(fila, 0).toString().trim();
            columna = "resp_unidad";
        }
        alertas.WarningAlert w = new alertas.WarningAlert(new JFrame(), true);
        if (nombre_tabla.equals("tabla_area")) {
            w.msj1.setText("Se eliminara el dato de nombre (" + nombre + "),");
            w.msj2.setText("su responsable de √°rea, unidad y responsable de unidad");
            w.msj3.setText("correspondientes de manera permanente del sistema.");
        } else if (nombre_tabla.equals("tabla_resp_area")) {
            w.msj1.setText("Se eliminara el dato de nombre (" + nombre + "),");
            w.msj2.setText("su √°rea, unidad y responsable de unidad");
            w.msj3.setText("correspondientes de manera permanente del sistema.");
        } else if (nombre_tabla.equals("tabla_unidad")) {
            w.msj1.setText("Se eliminara el dato de nombre (" + nombre + "),");
            w.msj2.setText("su responsable de √°rea, √°rea y responsable de unidad");
            w.msj3.setText("correspondientes de manera permanente del sistema.");
        } else if (nombre_tabla.equals("tabla_resp_unidad")) {
            w.msj1.setText("Se eliminara el dato de nombre (" + nombre + "),");
            w.msj2.setText("su responsable de √°rea, √°rea y unidad");
            w.msj3.setText("correspondientes de manera permanente del sistema.");
        } else {
            w.msj1.setText("Se eliminara el dato de");
            w.msj2.setText("nombre (" + nombre + ")");
            w.msj3.setText("de manera permanente del sistema.");
        }
        w.setVisible(true);
        if (w.hecho) {
            int control = 0;
            try {
                if (nombre_tabla.equals("tabla_area") || nombre_tabla.equals("tabla_resp_area")) {
                    if (nombre_tabla.equals("tabla_area")) {
                        control += opciones_de_gestionar_datos_cargados.eliminar_dato("lista_area", columna, nombre);
                        control += opciones_de_gestionar_datos_cargados.eliminar_dato("lista_unidad", columna, nombre);
                    }
                    if (nombre_tabla.equals("tabla_resp_area")) {
                        control += opciones_de_gestionar_datos_cargados.eliminar_dato("lista_unidad", "area", opciones_de_gestionar_datos_cargados.extraer_valor("select area from lista_area where resp_area='" + nombre + "'"));
                        control += opciones_de_gestionar_datos_cargados.eliminar_dato("lista_area", columna, nombre);
                    }
                } else if (nombre_tabla.equals("tabla_unidad") || nombre_tabla.equals("tabla_resp_unidad")) {
                    if (nombre_tabla.equals("tabla_unidad")) {
                        String nombre_area =opciones_de_gestionar_datos_cargados.extraer_valor("select area from lista_unidad where unidad='" + nombre + "'");
                        control += opciones_de_gestionar_datos_cargados.eliminar_dato("lista_area", "area", nombre_area );
                        control += opciones_de_gestionar_datos_cargados.eliminar_dato("lista_unidad", "area", nombre_area);
                    }
                    if (nombre_tabla.equals("tabla_resp_unidad")) {
                        String nombre_area=opciones_de_gestionar_datos_cargados.extraer_valor("select area from lista_unidad where resp_unidad='" + nombre + "'");
                        control += opciones_de_gestionar_datos_cargados.eliminar_dato("lista_area", "area", nombre_area);
                        control += opciones_de_gestionar_datos_cargados.eliminar_dato("lista_unidad", "area", nombre_area);
                    }
                    control += opciones_de_gestionar_datos_cargados.eliminar_dato("lista_unidad", columna, nombre);
                } else {
                    System.out.println("tabla " + nombre_tabla);
                    System.out.println("columna " + columna);
                    System.out.println("nombre " + nombre);
                    control = opciones_de_gestionar_datos_cargados.eliminar_dato(tabla_bd, columna, nombre);
                }
            } catch (IOException ex) {
                Logger.getLogger(pnl_datos.class.getName()).log(Level.SEVERE, null, ex);
            }
//                control=opciones_de_gestionar_datos_cargados.eliminar_dato(tabla_bd,columna,nombre);
            if (nombre_tabla.equals("tabla_area") || nombre_tabla.equals("tabla_resp_area") || nombre_tabla.equals("tabla_unidad") || nombre_tabla.equals("tabla_resp_unidad")) {
                if (control >0) {
                    llena_tablas();
                    datos.setText("");
                    check_area.setSelected(false);
                    check_empresa_adjuficatoria.setSelected(false);
                    check_estado_expediente.setSelected(false);
                    check_materia.setSelected(false);
                    check_prioridad.setSelected(false);
                    check_procedimiento.setSelected(false);
                    check_promotor.setSelected(false);
                    check_seleccionar_todos.setSelected(false);
                    check_tipo_contexto.setSelected(false);
                    check_tipo_expediente.setSelected(false);
                    check_desmarcar_todos.setSelected(false);
                    check_seleccionar_todos.setSelected(false);
                    lbl_error_datos.setVisible(false);
                    SuccessAlert s = new SuccessAlert(new JFrame(), true);
                    s.msj1.setText("Dato eliminado con √©xito");
                    s.msj2.setText("");
                    s.msj3.setText("");
                    centrar_componente(s);
                    s.setVisible(true);
                } else {
                    ErrorAlert e = new ErrorAlert(new JFrame(), true);
                    e.msj1.setText("Algo salio mal. No fue posible");
                    e.msj2.setText("continuar con esta acci√≥n.");
                    e.msj3.setText("");
                    e.setVisible(true);
                }
            } else {
                if (control == 1) {
                    llena_tablas();
                    datos.setText("");
                    check_area.setSelected(false);
                    check_empresa_adjuficatoria.setSelected(false);
                    check_estado_expediente.setSelected(false);
                    check_materia.setSelected(false);
                    check_prioridad.setSelected(false);
                    check_procedimiento.setSelected(false);
                    check_promotor.setSelected(false);
                    check_seleccionar_todos.setSelected(false);
                    check_tipo_contexto.setSelected(false);
                    check_tipo_expediente.setSelected(false);
                    check_desmarcar_todos.setSelected(false);
                    check_seleccionar_todos.setSelected(false);
                    lbl_error_datos.setVisible(false);
                    SuccessAlert s = new SuccessAlert(new JFrame(), true);
                    s.msj1.setText("Dato eliminado con √©xito");
                    s.msj2.setText("");
                    s.msj3.setText("");
                    centrar_componente(s);
                    s.setVisible(true);
                } else {
                    ErrorAlert e = new ErrorAlert(new JFrame(), true);
                    e.msj1.setText("Algo salio mal. No fue posible");
                    e.msj2.setText("continuar con esta acci√≥n.");
                    e.msj3.setText("");
                    e.setVisible(true);
                }
            }
        }

    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        this.menu.setVisible(false);
        boton_cancelar.setVisible(true);
        boton_registrar.setText("GUARDAR CAMBIOS");
        boton_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnGuardar.png")));
        boton_registrar1.setText("GUARDAR CAMBIOS");
        boton_registrar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnGuardar.png")));
        opciones_de_gestionar_datos_cargados d = new opciones_de_gestionar_datos_cargados();
        if (nombre_tabla.equals("tabla_area")) {
            int fila = this.tabla_area.getSelectedRow();
            d.setDato_tabla(this.tabla_area.getValueAt(fila, 0).toString().trim());
            d.setColumna_tabla("area");
            d.setNombre_tabla("lista_area");
        }
        if (nombre_tabla.equals("tabla_materia")) {
            int fila = this.tabla_materia.getSelectedRow();
            d.setDato_tabla(this.tabla_materia.getValueAt(fila, 0).toString().trim());
            d.setColumna_tabla("materia");
            d.setNombre_tabla("lista_materia");
        }
        if (nombre_tabla.equals("tabla_empresa_adjudicadora")) {
            int fila = this.tabla_empresa_adjudicadora.getSelectedRow();
            d.setDato_tabla(this.tabla_empresa_adjudicadora.getValueAt(fila, 0).toString().trim());
            d.setColumna_tabla("empresa_adjudicatoria");
            d.setNombre_tabla("lista_empresa_adjudicadoria");
        }
        if (nombre_tabla.equals("tabla_resp_area")) {
            int fila = this.tabla_resp_area.getSelectedRow();
            d.setDato_tabla(this.tabla_resp_area.getValueAt(fila, 0).toString().trim());
            d.setColumna_tabla("resp_area");
            d.setNombre_tabla("lista_area");
        }
        if (nombre_tabla.equals("tabla_estado_expediente")) {
            int fila = this.tabla_estado_expediente.getSelectedRow();
            d.setDato_tabla(this.tabla_estado_expediente.getValueAt(fila, 0).toString().trim());
            d.setColumna_tabla("estado_expediente");
            d.setNombre_tabla("lista_estado_expediente");
        }
        if (nombre_tabla.equals("tabla_procedimiento")) {
            int fila = this.tabla_procedimiento.getSelectedRow();
            d.setDato_tabla(this.tabla_procedimiento.getValueAt(fila, 0).toString().trim());
            d.setColumna_tabla("procedimiento");
            d.setNombre_tabla("lista_procedimiento");
        }
        if (nombre_tabla.equals("tabla_tipo_cxto")) {
            int fila = this.tabla_tipo_cxto.getSelectedRow();
            d.setDato_tabla(this.tabla_tipo_cxto.getValueAt(fila, 0).toString().trim());
            d.setColumna_tabla("tipo_contexto");
            d.setNombre_tabla("lista_tipo_contexto");
        }
        if (nombre_tabla.equals("tabla_promotor")) {
            int fila = this.tabla_promotor.getSelectedRow();
            d.setDato_tabla(this.tabla_promotor.getValueAt(fila, 0).toString().trim());
            d.setColumna_tabla("promotor");
            d.setNombre_tabla("lista_promotor");
        }
        if (nombre_tabla.equals("tabla_prioridad")) {
            int fila = this.tabla_prioridad.getSelectedRow();
            d.setDato_tabla(this.tabla_prioridad.getValueAt(fila, 0).toString().trim());
            d.setColumna_tabla("prioridad");
            d.setNombre_tabla("lista_prioridad");
        }
        if (nombre_tabla.equals("tabla_tipo_xpediente")) {
            int fila = this.tabla_tipo_xpediente.getSelectedRow();
            d.setDato_tabla(this.tabla_tipo_xpediente.getValueAt(fila, 0).toString().trim());
            d.setColumna_tabla("tipo_expediente");
            d.setNombre_tabla("lista_tipo_expediente");
        }
        if (nombre_tabla.equals("tabla_unidad")) {
            int fila = this.tabla_unidad.getSelectedRow();
            d.setDato_tabla(this.tabla_unidad.getValueAt(fila, 0).toString().trim());
            d.setColumna_tabla("unidad");
            d.setNombre_tabla("lista_unidad");
        }
        if (nombre_tabla.equals("tabla_resp_unidad")) {
            int fila = this.tabla_resp_unidad.getSelectedRow();
            d.setDato_tabla(this.tabla_resp_unidad.getValueAt(fila, 0).toString().trim());
            d.setColumna_tabla("resp_unidad");
            d.setNombre_tabla("lista_unidad");
        }
        datos.setText(d.getDato_tabla());
        datos.requestFocus();
        lbl_error_datos.setVisible(true);
        lbl_error_datos.setForeground(new java.awt.Color(0, 0, 0));
        lbl_error_datos.setIcon(null); // NOI18N
        lbl_error_datos.setText("Dato a guardar");
        Principal.scroll_principal.getVerticalScrollBar().setValue(Principal.scroll_principal.getVerticalScrollBar().getMaximum());
        this.menu.setVisible(false);


    }//GEN-LAST:event_btnEditarActionPerformed

    private void datosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_datosKeyReleased
        // TODO add your handling code here:
        if (datos.getText().length() > 0) {
            lbl_error_datos.setVisible(true);
            lbl_error_datos.setForeground(new java.awt.Color(0, 0, 0));
            lbl_error_datos.setIcon(null); // NOI18N
            lbl_error_datos.setText("Dato a guardar");
        } else {
            lbl_error_datos.setVisible(false);
        }
    }//GEN-LAST:event_datosKeyReleased

    private void datosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_datosKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_datosKeyTyped

    private void check_seleccionar_todosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_seleccionar_todosActionPerformed
        // TODO add your handling code here:
        if (check_seleccionar_todos.isSelected()) {
            check_area.setSelected(true);
            check_empresa_adjuficatoria.setSelected(true);
            check_estado_expediente.setSelected(true);
            check_materia.setSelected(true);
            check_prioridad.setSelected(true);
            check_procedimiento.setSelected(true);
            check_promotor.setSelected(true);
            check_desmarcar_todos.setSelected(false);
            check_tipo_contexto.setSelected(true);
            check_tipo_expediente.setSelected(true);
        } else {
            check_area.setSelected(false);
            check_empresa_adjuficatoria.setSelected(false);
            check_estado_expediente.setSelected(false);
            check_materia.setSelected(false);
            check_prioridad.setSelected(false);
            check_procedimiento.setSelected(false);
            check_promotor.setSelected(false);
            check_seleccionar_todos.setSelected(false);
            check_tipo_contexto.setSelected(false);
            check_tipo_expediente.setSelected(false);
        }
    }//GEN-LAST:event_check_seleccionar_todosActionPerformed
    public static int cerrado_dato_automatico=0;
    public static ArrayList array2 = new ArrayList();
    public static ArrayList array3 = new ArrayList();
    public static int tablas_visibles=0;
    private void boton_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_registrarActionPerformed
        // TODO add your handling code here:
        if (datos.getText().isEmpty()) {
            ErrorAlert.lanza_error_variable_sin_ex("", "Debe ingrear un dato a guardar", "");
            datos.requestFocus();
        } else {
            if (boton_registrar.getText().equals("REGISTRAR")) {
                if (!check_area.isSelected() && !check_empresa_adjuficatoria.isSelected() && !check_estado_expediente.isSelected() && !check_materia.isSelected() && !check_prioridad.isSelected()
                        && !check_procedimiento.isSelected() && !check_promotor.isSelected() && !check_tipo_contexto.isSelected()
                        && !check_tipo_expediente.isSelected()) {
                    ErrorAlert.lanza_error_variable_sin_ex("", "¬°Debe seleccionar al menos una tabla en la que guardar el dato introducido!", "");
                } else {
                    Runnable runnable1 = new Runnable() {
                        public void run() {
                            Guardando_general l = new Guardando_general(new JFrame(), true);
                            l.setVisible(true);
                            try {
                                int control = 0;
                                String texto = "El dato a guardar ya existe en la tabla ";
                                int control2 = 0;
                                pnl_datos.this.setEnabled(false);
                                // guardar user y pass
                                if ((check_area.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_area where area='" + datos.getText().trim() + "'"))
                                        || (check_empresa_adjuficatoria.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_empresa_adjudicadoria where empresa_adjudicatoria='" + datos.getText().trim() + "'"))
                                        || (check_estado_expediente.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_estado_expediente where estado_expediente='" + datos.getText().trim() + "'"))
                                        || (check_materia.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_materia where materia='" + datos.getText().trim() + "'"))
                                        || (check_prioridad.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_prioridad where materia='" + datos.getText().trim() + "'"))
                                        || (check_procedimiento.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_procedimiento where procedimiento='" + datos.getText().trim() + "'"))
                                        || (check_promotor.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_promotor where promotor='" + datos.getText().trim() + "'"))
                                        || (check_tipo_contexto.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_tipo_contexto where tipo_contexto='" + datos.getText().trim() + "'"))
                                        || (check_tipo_expediente.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_tipo_expediente where tipo_expediente='" + datos.getText().trim() + "'"))) {
                                    if ((check_area.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_area where area='" + datos.getText().trim() + "'"))) {
                                        ErrorAlert.lanza_error_variable_sin_ex("", texto + "√Årea", "");
                                    } else if ((check_empresa_adjuficatoria.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_empresa_adjudicadoria where empresa_adjudicatoria='" + datos.getText().trim() + "'"))) {
                                        ErrorAlert.lanza_error_variable_sin_ex("", texto + "Empresa Adjudicatoria", "");
                                    } else if ((check_estado_expediente.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_estado_expediente where estado_expediente='" + datos.getText().trim() + "'"))) {
                                        ErrorAlert.lanza_error_variable_sin_ex("", texto + "Estado Expediente", "");
                                    } else if ((check_materia.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_materia where materia='" + datos.getText().trim() + "'"))) {
                                        ErrorAlert.lanza_error_variable_sin_ex("", texto + "Materia", "");
                                    } else if ((check_prioridad.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_materia where materia='" + datos.getText().trim() + "'"))) {
                                        ErrorAlert.lanza_error_variable_sin_ex("", texto + "Prioridad", "");
                                    } else if ((check_procedimiento.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_procedimiento where procedimiento='" + datos.getText().trim() + "'"))) {
                                        ErrorAlert.lanza_error_variable_sin_ex("", texto + "Procedimiento", "");
                                    } else if ((check_promotor.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_promotor where promotor='" + datos.getText().trim() + "'"))) {
                                        ErrorAlert.lanza_error_variable_sin_ex("", texto + "Promotor", "");
                                    } else if ((check_tipo_contexto.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_tipo_contexto where tipo_contexto='" + datos.getText().trim() + "'"))) {
                                        ErrorAlert.lanza_error_variable_sin_ex("", texto + "Tipo Contexto", "");
                                    } else if ((check_tipo_expediente.isSelected() && opciones_de_gestionar_usuarios.existe("select * from lista_tipo_expediente where tipo_expediente='" + datos.getText().trim() + "'"))) {
                                        ErrorAlert.lanza_error_variable_sin_ex("", texto + "Tipo Expediente", "");
                                    }
                                } else {
                                    if (check_area.isSelected()) {
                                        dato_automatico("Responsable de √Årea", "Unidad", "Responsable de Unidad", true, true);
                                        if(cerrado_dato_automatico==0){
                                            switch (tablas_visibles) {
                                                case 1:
                                                    {
                                                        int control_temp=0;
                                                        // mas de una unidad pero un solo resp unidad
                                                        control_temp += opciones_de_gestionar_datos_cargados.registrar2Columnas(datos.getText().trim(), combo_autoseleccionado.getValor1().getText().trim());
                                                        for(int i=0;i<array2.size();i++){
                                                            control_temp += opciones_de_gestionar_datos_cargados.registrar3Columnas(array2.get(i).toString().trim(), datos.getText().trim(), combo_autoseleccionado.getValor3().getText().trim());
                                                        }       if(control_temp-1==array2.size()){
                                                            control=2;
                                                        }       control2++;
                                                        //-----------------------------------------
                                                        break;
                                                    }
                                                case 2:
                                                    {
                                                        int control_temp=0;
                                                        // una sola unidad pero varios resp unidad
                                                        control_temp += opciones_de_gestionar_datos_cargados.registrar2Columnas(datos.getText().trim(), combo_autoseleccionado.getValor1().getText().trim());
                                                        for(int i=0;i<array3.size();i++){
                                                            control_temp += opciones_de_gestionar_datos_cargados.registrar3Columnas(combo_autoseleccionado.getValor2().getText().trim(), datos.getText().trim(), array3.get(i).toString().trim());
                                                        }       if(control_temp-1==array3.size()){
                                                            control=2;
                                                        }       control2++;
                                                        //----------------------------------------
                                                        break;
                                                    }
                                                case 3:
                                                    {
                                                        int control_temp=0;
                                                        int control_temp3=0;
                                                        // varias unidadedes y varios resp unidad
                                                        control_temp += opciones_de_gestionar_datos_cargados.registrar2Columnas(datos.getText().trim(), combo_autoseleccionado.getValor1().getText().trim());
                                                        for(int i=0;i<array3.size();i++){
                                                            for(int x=0;x<array2.size();x++){
                                                                control_temp3 += opciones_de_gestionar_datos_cargados.registrar3Columnas(array2.get(x).toString().trim(), datos.getText().trim(), array3.get(i).toString().trim());
                                                            }
                                                        }       if((control_temp3>0) && control_temp==1){
                                                            control=2;
                                                        }       control2++;
                                                        //------------------------------------------  
                                                        break;
                                                    }
                                                default:
                                                    control += opciones_de_gestionar_datos_cargados.registrar2Columnas(datos.getText().trim(), combo_autoseleccionado.getValor1().getText().trim());
                                                    control += opciones_de_gestionar_datos_cargados.registrar3Columnas(combo_autoseleccionado.getValor2().getText().trim(), datos.getText().trim(), combo_autoseleccionado.getValor3().getText().trim());
                                                    control2++;
                                                    break;
                                            }
                                        }
                                        
                                    }
                                    if (check_empresa_adjuficatoria.isSelected()) {
                                        control += opciones_de_gestionar_datos_cargados.registrar("lista_empresa_adjudicadoria", "empresa_adjudicatoria", datos.getText().trim());
                                        control2++;
                                    }
                                    if (check_estado_expediente.isSelected()) {
                                        control += opciones_de_gestionar_datos_cargados.registrar("lista_estado_expediente", "estado_expediente", datos.getText().trim());
                                        control2++;
                                    }
                                    if (check_materia.isSelected()) {
                                        control += opciones_de_gestionar_datos_cargados.registrar("lista_materia", "materia", datos.getText().trim());
                                        control2++;
                                    }
                                    if (check_prioridad.isSelected()) {
                                        control += opciones_de_gestionar_datos_cargados.registrar("lista_prioridad", "prioridad", datos.getText().trim());
                                        control2++;
                                    }
                                    if (check_procedimiento.isSelected()) {
                                        control += opciones_de_gestionar_datos_cargados.registrar("lista_procedimiento", "procedimiento", datos.getText().trim());
                                        control2++;
                                    }
                                    if (check_promotor.isSelected()) {
                                        control += opciones_de_gestionar_datos_cargados.registrar("lista_promotor", "promotor", datos.getText().trim());
                                        control2++;
                                    }
                                    if (check_tipo_contexto.isSelected()) {
                                        control += opciones_de_gestionar_datos_cargados.registrar("lista_tipo_contexto", "tipo_contexto", datos.getText().trim());
                                        control2++;
                                    }
                                    if (check_tipo_expediente.isSelected()) {
                                        control += opciones_de_gestionar_datos_cargados.registrar("lista_tipo_expediente", "tipo_expediente", datos.getText().trim());
                                        control2++;
                                    }
                                    if (check_area.isSelected()&&cerrado_dato_automatico==0) {
                                        if ((control - 1) == control2) {
                                            SuccessAlert s = new SuccessAlert(new JFrame(), true);
                                            s.msj1.setText("");
                                            s.msj2.setText("¬°Datos guardados con √©xito!");
                                            s.msj3.setText("");
                                            s.setLocationRelativeTo(null);
                                            datos.setText("");
                                            check_area.setSelected(false);
                                            check_empresa_adjuficatoria.setSelected(false);
                                            check_estado_expediente.setSelected(false);
                                            check_materia.setSelected(false);
                                            check_prioridad.setSelected(false);
                                            check_procedimiento.setSelected(false);
                                            check_promotor.setSelected(false);
                                            check_seleccionar_todos.setSelected(false);
                                            check_tipo_contexto.setSelected(false);
                                            check_tipo_expediente.setSelected(false);
                                            check_desmarcar_todos.setSelected(false);
                                            check_seleccionar_todos.setSelected(false);
                                            lbl_error_datos.setVisible(false);
                                            centrar_componente(s);
                                            s.setVisible(true);
                                            llena_tablas();
                                            array2.clear();
                                            array3.clear();
                                            control=0;
                                            control2=0;
                                            tablas_visibles=0;
                                        } else {
                                            ErrorAlert e = new ErrorAlert(new JFrame(), true);
                                            e.msj1.setText("Algo salio mal. No fue posible");
                                            e.msj2.setText("continuar con esta acci√≥n.");
                                            e.msj3.setText("");
                                            e.setVisible(true);
                                        }
                                    } else if(!check_area.isSelected()){
                                        if ((control) == control2) { 
                                            SuccessAlert s = new SuccessAlert(new JFrame(), true);
                                            s.msj1.setText("");
                                            s.msj2.setText("¬°Datos guardados con √©xito!");
                                            s.msj3.setText("");
                                            s.setLocationRelativeTo(null);
                                            datos.setText("");
                                            check_area.setSelected(false);
                                            check_empresa_adjuficatoria.setSelected(false);
                                            check_estado_expediente.setSelected(false);
                                            check_materia.setSelected(false);
                                            check_prioridad.setSelected(false);
                                            check_procedimiento.setSelected(false);
                                            check_promotor.setSelected(false);
                                            check_seleccionar_todos.setSelected(false);
                                            check_tipo_contexto.setSelected(false);
                                            check_tipo_expediente.setSelected(false);
                                            check_desmarcar_todos.setSelected(false);
                                            check_seleccionar_todos.setSelected(false);
                                            lbl_error_datos.setVisible(false);
                                            centrar_componente(s);
                                            s.setVisible(true);
                                            llena_tablas();
                                        } else {
                                            ErrorAlert e = new ErrorAlert(new JFrame(), true);
                                            e.msj1.setText("Algo salio mal. No fue posible");
                                            e.msj2.setText("continuar con esta acci√≥n.");
                                            e.msj3.setText("");
                                            e.setVisible(true);
                                        }
                                    }
                                    cerrado_dato_automatico=0;
                                }
                                pnl_datos.this.setEnabled(true);
                                l.setVisible(false);
                            } catch (Exception e) {
                                ErrorAlert.lanza_error(e);

                            }
                        }
                    };
                    Thread t1 = new Thread(runnable1);
                    t1.start();
                }
            } else {

                Runnable runnable1 = new Runnable() {
                    public void run() {
                        Guardando_general l = new Guardando_general(new JFrame(), true);
                        l.setVisible(true);
                        try {
                             int control_actualizar=0;
                            String texto = "El dato a guardar ya existe en la tabla ";
                            pnl_datos.this.setEnabled(false);
                            // validar que no se repita 
                            opciones_de_gestionar_datos_cargados d = new opciones_de_gestionar_datos_cargados();
                            if (opciones_de_gestionar_usuarios.existe("select * from " + d.getNombre_tabla() + " where " + d.getColumna_tabla() + "='" + datos.getText().trim() + "'")) {
                                ErrorAlert.lanza_error_variable_sin_ex("", texto + d.getColumna_tabla(), "");
                            } else {
                                if(d.getColumna_tabla().equals("area")){
                                    control_actualizar += opciones_de_gestionar_datos_cargados.actualizar_datos("lista_unidad", d.getColumna_tabla(), datos.getText().trim(), d.getDato_tabla());
                                    control_actualizar += opciones_de_gestionar_datos_cargados.actualizar_datos(d.getNombre_tabla(), d.getColumna_tabla(), datos.getText().trim(), d.getDato_tabla());
                                }else{
                                control_actualizar = opciones_de_gestionar_datos_cargados.actualizar_datos(d.getNombre_tabla(), d.getColumna_tabla(), datos.getText().trim(), d.getDato_tabla());
                                    System.out.println("puto numerito "+control_actualizar);
                                }
                                if (control_actualizar >0) {
                                    boton_cancelar.setVisible(false);
                                    boton_registrar.setText("REGISTRAR");
                                    boton_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnRegistrar.png")));
                                    boton_registrar1.setText("REGISTRAR");
                                    boton_registrar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnRegistrar.png")));
                                    datos.setText("");
                                    lbl_error_datos.setVisible(false);
                                    datos.setText("");
                                    check_area.setSelected(false);
                                    check_empresa_adjuficatoria.setSelected(false);
                                    check_estado_expediente.setSelected(false);
                                    check_materia.setSelected(false);
                                    check_prioridad.setSelected(false);
                                    check_procedimiento.setSelected(false);
                                    check_promotor.setSelected(false);
                                    check_seleccionar_todos.setSelected(false);
                                    check_tipo_contexto.setSelected(false);
                                    check_tipo_expediente.setSelected(false);
                                    check_desmarcar_todos.setSelected(false);
                                    check_seleccionar_todos.setSelected(false);
                                    lbl_error_datos.setVisible(false);
                                    SuccessAlert s = new SuccessAlert(new JFrame(), true);
                                    s.msj1.setText("");
                                    s.msj2.setText("¬°Dato actualizado con √©xito!");
                                    s.msj3.setText("");
                                    s.setLocationRelativeTo(null);
                                    centrar_componente(s);
                                    s.setVisible(true);
                                    llena_tablas();
                                }

                            }
                            pnl_datos.this.setEnabled(true);
                            l.setVisible(false);
                        } catch (Exception e) {
                            ErrorAlert.lanza_error(e);

                        }
                    }
                };
                Thread t1 = new Thread(runnable1);
                t1.start();

            }

        }


    }//GEN-LAST:event_boton_registrarActionPerformed

    private void centrar_componente(Component c) {
        Dimension pantalla_size = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frame_size = c.getSize();
        if (frame_size.height > pantalla_size.height) {
            frame_size.height = pantalla_size.height;
        }
        if (frame_size.width > pantalla_size.width) {
            frame_size.width = pantalla_size.width;
        }
        c.setLocation((pantalla_size.width - frame_size.width) / 2, (pantalla_size.height - frame_size.height) / 2);
    }


    private void check_desmarcar_todosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_desmarcar_todosActionPerformed
        // TODO add your handling code here:
        if (check_desmarcar_todos.isSelected()) {
            check_area.setSelected(false);
            check_empresa_adjuficatoria.setSelected(false);
            check_estado_expediente.setSelected(false);
            check_materia.setSelected(false);
            check_prioridad.setSelected(false);
            check_procedimiento.setSelected(false);
            check_promotor.setSelected(false);
            check_seleccionar_todos.setSelected(false);
            check_tipo_contexto.setSelected(false);
            check_tipo_expediente.setSelected(false);
        }
    }//GEN-LAST:event_check_desmarcar_todosActionPerformed

    private void boton_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_cancelarActionPerformed
        // TODO add your handling code here:
        boton_cancelar.setVisible(false);
        boton_registrar.setText("REGISTRAR");
        boton_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnRegistrar.png")));
        datos.setText("");
        lbl_error_datos.setVisible(false);
    }//GEN-LAST:event_boton_cancelarActionPerformed

    
    public static int cerrado_dato_automatico_unidad=0;
    public static ArrayList array2_unidad = new ArrayList();
    public static ArrayList array3_unidad = new ArrayList();
    public static int tablas_visibles_unidad=0;
    private void add_unidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_unidadActionPerformed
        // TODO add your handling code here:
        this.menu.setVisible(false);
                            Guardando_general l = new Guardando_general(new JFrame(), true);
                            l.setVisible(true);
                            try {
                                int control = 0;
                                String texto = "El dato a guardar ya existe en la tabla ";
                                int control2 = 0;
                                pnl_datos.this.setEnabled(false);
                                        dato_automatico_unidad("Unidad","Responsable de Unidad");
                                        if(cerrado_dato_automatico_unidad==0){
                                            switch (tablas_visibles_unidad) {
                                                case 1:
                                                    {
                                                        int control_temp=0;
                                                        // mas de una unidad pero un solo resp unidad
                                                         for(int i=0;i<array2_unidad.size();i++){
                                                            control_temp += opciones_de_gestionar_datos_cargados.registrar3Columnas(array2_unidad.get(i).toString().trim(),nombre_area_tabla_unidad, opciones_de_gestionar_datos_cargados.extraer_valor("select resp_area from lista_area where area='"+nombre_area_tabla_unidad+"'"));
                                                        }       
                                                         if(control_temp==array2_unidad.size()){
                                                            control++;
                                                        }       control2++;
                                                        //-----------------------------------------
                                                        break;
                                                    }
                                                case 2:
                                                    {
                                                        int control_temp=0;
                                                        // una sola unidad pero varios resp unidad
                                                        for(int i=0;i<array3_unidad.size();i++){
                                                            control_temp += opciones_de_gestionar_datos_cargados.registrar3Columnas(combo_add_unidad.getValor2().getText().trim(), nombre_area_tabla_unidad, array3_unidad.get(i).toString().trim());
                                                        }       if(control_temp==array3_unidad.size()){
                                                            control++;
                                                        }       control2++;
                                                        //----------------------------------------
                                                        break;
                                                    }
                                                case 3:
                                                    {
                                                        int control_temp3=0;
                                                        // varias unidadedes y varios resp unidad
                                                        for(int i=0;i<array3_unidad.size();i++){
                                                            for(int x=0;x<array2_unidad.size();x++){
                                                                control_temp3 += opciones_de_gestionar_datos_cargados.registrar3Columnas(array2_unidad.get(x).toString().trim(), nombre_area_tabla_unidad, array3_unidad.get(i).toString().trim());
                                                            }
                                                        }       if((control_temp3>0)){
                                                            control++;
                                                        }       control2++;
                                                        //------------------------------------------  
                                                        break;
                                                    }
                                                default:
                                                    control += opciones_de_gestionar_datos_cargados.registrar3Columnas(combo_add_unidad.getValor2().getText().trim(), nombre_area_tabla_unidad, combo_add_unidad.getValor3().getText().trim());
                                                    control2++;
                                                    break;
                                            }
                                        }
                                        
                                    if (cerrado_dato_automatico_unidad==0) {
                                        if ((control) == control2) {
                                            SuccessAlert s = new SuccessAlert(new JFrame(), true);
                                            s.msj1.setText("");
                                            s.msj2.setText("¬°Datos guardados con √©xito!");
                                            s.msj3.setText("");
                                            s.setLocationRelativeTo(null);
                                            datos.setText("");
                                            check_area.setSelected(false);
                                            check_empresa_adjuficatoria.setSelected(false);
                                            check_estado_expediente.setSelected(false);
                                            check_materia.setSelected(false);
                                            check_prioridad.setSelected(false);
                                            check_procedimiento.setSelected(false);
                                            check_promotor.setSelected(false);
                                            check_seleccionar_todos.setSelected(false);
                                            check_tipo_contexto.setSelected(false);
                                            check_tipo_expediente.setSelected(false);
                                            check_desmarcar_todos.setSelected(false);
                                            check_seleccionar_todos.setSelected(false);
                                            lbl_error_datos.setVisible(false);
                                            centrar_componente(s);
                                            s.setVisible(true);
                                            llena_tablas();
                                            array2_unidad.clear();
                                            array3_unidad.clear();
                                            control=0;
                                            control2=0;
                                            tablas_visibles_unidad=0;
                                        } else {
                                            ErrorAlert e = new ErrorAlert(new JFrame(), true);
                                            e.msj1.setText("Algo salio mal. No fue posible");
                                            e.msj2.setText("continuar con esta acci√≥n.");
                                            e.msj3.setText("");
                                            e.setVisible(true);
                                        }
                                    } 
                                    cerrado_dato_automatico_unidad=0;
                                
                                pnl_datos.this.setEnabled(true);
                                l.setVisible(false);
                            } catch (Exception e) {
                                ErrorAlert.lanza_error(e);

                            }
    }//GEN-LAST:event_add_unidadActionPerformed

    private void boton_registrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_registrar1ActionPerformed
        // TODO add your handling code here:
        boton_registrarActionPerformed(evt);
    }//GEN-LAST:event_boton_registrar1ActionPerformed

    public static void dato_automatico(String valor1, String valor2, String valor3, boolean val2, boolean val3) {

        combo_autoseleccionado s = new combo_autoseleccionado(new JFrame(), true);
        s.valor1.setPlaceholder(valor1);
        s.valor2.setPlaceholder(valor2);
        s.valor3.setPlaceholder(valor3);
        s.valor2.setVisible(val2);
        s.valor3.setVisible(val3);
        s.placeholder_inicial1 = valor1;
        s.placeholder_inicial2 = valor2;
        s.placeholder_inicial3 = valor3;
        s.preferredSize();
        s.pack();
        s.setVisible(true);
//        RSUtilities.setCentrarVentana(s);

    }
    
    public static void dato_automatico_unidad(String valor2, String valor3) {

        combo_add_unidad s = new combo_add_unidad(new JFrame(), true);
        s.valor2.setPlaceholder(valor2);
        s.valor3.setPlaceholder(valor3);
        s.placeholder_inicial2 = valor2;
        s.placeholder_inicial3 = valor3;
        s.preferredSize();
        s.pack();
        s.setVisible(true);
//        RSUtilities.setCentrarVentana(s);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static rojeru_san.RSButtonRiple add_unidad;
    private rojeru_san.RSButtonRiple boton_cancelar;
    private rojeru_san.RSButtonRiple boton_registrar;
    private rojeru_san.RSButtonRiple boton_registrar1;
    private rojeru_san.RSButtonRiple btnBorrar;
    private rojeru_san.RSButtonRiple btnEditar;
    public static javax.swing.JCheckBox check_area;
    public static javax.swing.JCheckBox check_desmarcar_todos;
    public static javax.swing.JCheckBox check_empresa_adjuficatoria;
    public static javax.swing.JCheckBox check_estado_expediente;
    public static javax.swing.JCheckBox check_materia;
    public static javax.swing.JCheckBox check_prioridad;
    public static javax.swing.JCheckBox check_procedimiento;
    public static javax.swing.JCheckBox check_promotor;
    public static javax.swing.JCheckBox check_seleccionar_todos;
    public static javax.swing.JCheckBox check_tipo_contexto;
    public static javax.swing.JCheckBox check_tipo_expediente;
    public static rojeru_san.rsfield.RSTextMaterial datos;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    public static javax.swing.JLabel lbl_error_datos;
    private rojerusan.RSPopuMenu menu;
    private javax.swing.JPanel panel_selection2;
    private javax.swing.JPanel panel_selection3;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JScrollPane scroll1;
    private javax.swing.JScrollPane scroll10;
    private javax.swing.JScrollPane scroll11;
    private javax.swing.JScrollPane scroll2;
    private javax.swing.JScrollPane scroll3;
    private javax.swing.JScrollPane scroll4;
    private javax.swing.JScrollPane scroll5;
    private javax.swing.JScrollPane scroll6;
    private javax.swing.JScrollPane scroll7;
    private javax.swing.JScrollPane scroll8;
    private javax.swing.JScrollPane scroll9;
    public static rojerusan.RSTableMetro tabla_area;
    public static rojerusan.RSTableMetro tabla_empresa_adjudicadora;
    public static rojerusan.RSTableMetro tabla_estado_expediente;
    public static rojerusan.RSTableMetro tabla_materia;
    public static rojerusan.RSTableMetro tabla_prioridad;
    public static rojerusan.RSTableMetro tabla_procedimiento;
    public static rojerusan.RSTableMetro tabla_promotor;
    public static rojerusan.RSTableMetro tabla_resp_area;
    public static rojerusan.RSTableMetro tabla_resp_unidad;
    public static rojerusan.RSTableMetro tabla_tipo_cxto;
    public static rojerusan.RSTableMetro tabla_tipo_xpediente;
    public static rojerusan.RSTableMetro tabla_unidad;
    // End of variables declaration//GEN-END:variables
}
