/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package configuracion;

import alertas.ErrorAlert;
import alertas.SuccessAlert;
import combobox.BoundsPopupMenuListener;
import esperas.Guardando_general;
import interaccion_BD.opciones_de_gestionar_usuarios;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.InputEvent;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import principal.Principal;

/**
 *
 * @author 4l3
 */
public class pnl_Gestionar_usuarios extends javax.swing.JPanel {

    private int PosicionMouse;
    /**
     * Creates new form pnlHome
     */
    public pnl_Gestionar_usuarios() {
        initComponents();
        boton_cancelar.setVisible(false);
        this.menu.add(pnlMenu);
        reset_campos();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu = new rojerusan.RSPopuMenu();
        pnlMenu = new javax.swing.JPanel();
        btnBorrar = new rojeru_san.RSButtonRiple();
        btnEditar = new rojeru_san.RSButtonRiple();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        nombre_usuario = new rojeru_san.rsfield.RSTextMaterial();
        scroll = new javax.swing.JScrollPane();
        tabla_usuarios = new rojerusan.RSTableMetro();
        label_pass = new rojeru_san.RSMPassView();
        jLabel1 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        marcar_todos_contrato = new javax.swing.JCheckBox();
        add_contrato = new javax.swing.JCheckBox();
        editar_contrato = new javax.swing.JCheckBox();
        desmarcar_todos_contrato = new javax.swing.JCheckBox();
        eliminar_contrato = new javax.swing.JCheckBox();
        datos_cargados = new javax.swing.JCheckBox();
        jPanel21 = new javax.swing.JPanel();
        marcar_usuario = new javax.swing.JCheckBox();
        add_usuario = new javax.swing.JCheckBox();
        editar_usuario = new javax.swing.JCheckBox();
        desmarcar_usuario = new javax.swing.JCheckBox();
        delete_usuario = new javax.swing.JCheckBox();
        listar_usuarios = new javax.swing.JCheckBox();
        combo_area_usuarios = new org.bolivia.combo.SComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        boton_registrar = new rojeru_san.RSButtonRiple();
        boton_cancelar = new rojeru_san.RSButtonRiple();

        menu.setBackground(new java.awt.Color(255, 255, 255));
        menu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        pnlMenu.setBackground(new java.awt.Color(255, 255, 255));

        btnBorrar.setBackground(new java.awt.Color(69, 87, 252));
        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnEliminar.png"))); // NOI18N
        btnBorrar.setText("ELIMINAR");
        btnBorrar.setColorHover(new java.awt.Color(87, 103, 253));
        btnBorrar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnBorrar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnEditar.setBackground(new java.awt.Color(69, 87, 252));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnEditar.png"))); // NOI18N
        btnEditar.setText("EDITAR");
        btnEditar.setColorHover(new java.awt.Color(87, 103, 253));
        btnEditar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMenuLayout = new javax.swing.GroupLayout(pnlMenu);
        pnlMenu.setLayout(pnlMenuLayout);
        pnlMenuLayout.setHorizontalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pnlMenuLayout.setVerticalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(128, 128, 131));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Gestionar Usuarios");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        nombre_usuario.setForeground(new java.awt.Color(0, 0, 0));
        nombre_usuario.setColorMaterial(new java.awt.Color(99, 70, 250));
        nombre_usuario.setPlaceholder("Nombre de usuario...   (*)");
        nombre_usuario.setSelectionColor(new java.awt.Color(38, 86, 186));
        nombre_usuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombre_usuarioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombre_usuarioKeyTyped(evt);
            }
        });

        scroll.setBorder(null);

        tabla_usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOMBRE USUSARIO", "CONTRASEÑA", "ÁREA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_usuarios.setToolTipText("");
        tabla_usuarios.setAltoHead(30);
        tabla_usuarios.setColorBackgoundHead(new java.awt.Color(38, 86, 186));
        tabla_usuarios.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tabla_usuarios.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabla_usuarios.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tabla_usuarios.setColorHoverBackgound(new java.awt.Color(69, 87, 252));
        tabla_usuarios.setColorSelBackgound(new java.awt.Color(69, 87, 252));
        tabla_usuarios.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla_usuarios.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabla_usuarios.setGrosorBordeFilas(0);
        tabla_usuarios.setHover(true);
        tabla_usuarios.setMultipleSeleccion(false);
        tabla_usuarios.setRowHeight(30);
        tabla_usuarios.setSelectionBackground(new java.awt.Color(99, 70, 250));
        tabla_usuarios.getTableHeader().setReorderingAllowed(false);
        tabla_usuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_usuariosMouseClicked(evt);
            }
        });
        scroll.setViewportView(tabla_usuarios);

        label_pass.setBorder(null);
        label_pass.setForeground(new java.awt.Color(0, 0, 0));
        label_pass.setBordeColorNoFocus(new java.awt.Color(0, 112, 192));
        label_pass.setBotonColor(new java.awt.Color(38, 86, 186));
        label_pass.setCaretColor(new java.awt.Color(153, 153, 153));
        label_pass.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        label_pass.setPlaceholder("Contraseña...   (*)");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("PERMISOS");

        jPanel12.setBackground(new java.awt.Color(248, 248, 248));
        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 104, 178)), "CONTRATO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        marcar_todos_contrato.setBackground(new java.awt.Color(248, 248, 248));
        marcar_todos_contrato.setForeground(new java.awt.Color(102, 102, 102));
        marcar_todos_contrato.setText("MARCAR TODOS");
        marcar_todos_contrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        marcar_todos_contrato.setIconTextGap(12);
        marcar_todos_contrato.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        marcar_todos_contrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marcar_todos_contratoActionPerformed(evt);
            }
        });

        add_contrato.setBackground(new java.awt.Color(248, 248, 248));
        add_contrato.setForeground(new java.awt.Color(102, 102, 102));
        add_contrato.setText("AÑADIR");
        add_contrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        add_contrato.setIconTextGap(12);
        add_contrato.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        add_contrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_contratoActionPerformed(evt);
            }
        });

        editar_contrato.setBackground(new java.awt.Color(248, 248, 248));
        editar_contrato.setForeground(new java.awt.Color(102, 102, 102));
        editar_contrato.setText("EDITAR");
        editar_contrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        editar_contrato.setIconTextGap(12);
        editar_contrato.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        editar_contrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editar_contratoActionPerformed(evt);
            }
        });

        desmarcar_todos_contrato.setBackground(new java.awt.Color(248, 248, 248));
        desmarcar_todos_contrato.setForeground(new java.awt.Color(102, 102, 102));
        desmarcar_todos_contrato.setText("DESMARCAR TODOS");
        desmarcar_todos_contrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        desmarcar_todos_contrato.setIconTextGap(12);
        desmarcar_todos_contrato.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        desmarcar_todos_contrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desmarcar_todos_contratoActionPerformed(evt);
            }
        });

        eliminar_contrato.setBackground(new java.awt.Color(248, 248, 248));
        eliminar_contrato.setForeground(new java.awt.Color(102, 102, 102));
        eliminar_contrato.setText("ELIMINAR");
        eliminar_contrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        eliminar_contrato.setIconTextGap(12);
        eliminar_contrato.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        eliminar_contrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_contratoActionPerformed(evt);
            }
        });

        datos_cargados.setBackground(new java.awt.Color(248, 248, 248));
        datos_cargados.setForeground(new java.awt.Color(102, 102, 102));
        datos_cargados.setText("DATOS CARGADOS");
        datos_cargados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        datos_cargados.setIconTextGap(12);
        datos_cargados.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        datos_cargados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datos_cargadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(marcar_todos_contrato)
                    .addComponent(add_contrato)
                    .addComponent(editar_contrato))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datos_cargados)
                    .addComponent(desmarcar_todos_contrato)
                    .addComponent(eliminar_contrato))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(desmarcar_todos_contrato)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eliminar_contrato))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(marcar_todos_contrato)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(add_contrato)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editar_contrato)
                    .addComponent(datos_cargados))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel21.setBackground(new java.awt.Color(248, 248, 248));
        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 104, 178)), "USUARIOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        marcar_usuario.setBackground(new java.awt.Color(248, 248, 248));
        marcar_usuario.setForeground(new java.awt.Color(102, 102, 102));
        marcar_usuario.setText("MARCAR TODOS");
        marcar_usuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        marcar_usuario.setIconTextGap(12);
        marcar_usuario.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        marcar_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marcar_usuarioActionPerformed(evt);
            }
        });

        add_usuario.setBackground(new java.awt.Color(248, 248, 248));
        add_usuario.setForeground(new java.awt.Color(102, 102, 102));
        add_usuario.setText("AÑADIR");
        add_usuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        add_usuario.setIconTextGap(12);
        add_usuario.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        add_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_usuarioActionPerformed(evt);
            }
        });

        editar_usuario.setBackground(new java.awt.Color(248, 248, 248));
        editar_usuario.setForeground(new java.awt.Color(102, 102, 102));
        editar_usuario.setText("EDITAR");
        editar_usuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        editar_usuario.setIconTextGap(12);
        editar_usuario.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        editar_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editar_usuarioActionPerformed(evt);
            }
        });

        desmarcar_usuario.setBackground(new java.awt.Color(248, 248, 248));
        desmarcar_usuario.setForeground(new java.awt.Color(102, 102, 102));
        desmarcar_usuario.setText("DESMARCAR TODOS");
        desmarcar_usuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        desmarcar_usuario.setIconTextGap(12);
        desmarcar_usuario.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        desmarcar_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desmarcar_usuarioActionPerformed(evt);
            }
        });

        delete_usuario.setBackground(new java.awt.Color(248, 248, 248));
        delete_usuario.setForeground(new java.awt.Color(102, 102, 102));
        delete_usuario.setText("ELIMINAR");
        delete_usuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        delete_usuario.setIconTextGap(12);
        delete_usuario.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        delete_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_usuarioActionPerformed(evt);
            }
        });

        listar_usuarios.setBackground(new java.awt.Color(248, 248, 248));
        listar_usuarios.setForeground(new java.awt.Color(102, 102, 102));
        listar_usuarios.setText("LISTAR");
        listar_usuarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/uncheck.png"))); // NOI18N
        listar_usuarios.setIconTextGap(12);
        listar_usuarios.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/check.png"))); // NOI18N
        listar_usuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listar_usuariosActionPerformed(evt);
            }
        });

        combo_area_usuarios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Área", "Gestión de la producción", "Sistema base", "Gestión de aplicaciones", "Sistema de comunicaciones", "Administrador" }));
        combo_area_usuarios.setMinimumSize(new java.awt.Dimension(151, 22));

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combo_area_usuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(marcar_usuario)
                            .addComponent(add_usuario)
                            .addComponent(listar_usuarios))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(desmarcar_usuario)
                            .addComponent(delete_usuario)
                            .addComponent(editar_usuario))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marcar_usuario)
                    .addComponent(desmarcar_usuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listar_usuarios)
                    .addComponent(delete_usuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_usuario)
                    .addComponent(editar_usuario))
                .addGap(18, 18, 18)
                .addComponent(combo_area_usuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/label-nombre.png"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/label-contraseña.png"))); // NOI18N

        boton_registrar.setBackground(new java.awt.Color(38, 86, 186));
        boton_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnRegistrar.png"))); // NOI18N
        boton_registrar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        boton_registrar.setLabel("REGISTRAR");
        boton_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_registrarActionPerformed(evt);
            }
        });

        boton_cancelar.setBackground(new java.awt.Color(255, 51, 51));
        boton_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btn-cancelar.png"))); // NOI18N
        boton_cancelar.setText("CANCELAR");
        boton_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(label_pass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(nombre_usuario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(boton_registrar, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(boton_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(170, 554, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nombre_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label_pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton_registrar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boton_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void inicio(JCheckBox listar,JCheckBox add,JCheckBox editar,JCheckBox eliminar,JCheckBox marcar,JCheckBox desmarcar){
         listar.setSelected(true);
        add.setSelected(false);
        editar.setSelected(false);
        eliminar.setSelected(false);
        marcar.setSelected(false);
        desmarcar.setSelected(false);
        BoundsPopupMenuListener listener = new BoundsPopupMenuListener(true, false);
                    combo_area_usuarios.addPopupMenuListener( listener );
                    combo_area_usuarios.setPrototypeDisplayValue("ItemWWW");
    }
    
    private boolean  obliga_listar(JCheckBox listar,JCheckBox add,JCheckBox editar,JCheckBox eliminar){
        boolean falta_listar=false;
        if(listar.isSelected()==false&&(add.isSelected()||editar.isSelected()||eliminar.isSelected())){
            falta_listar=true;
        }
        return falta_listar;
    }
    
    private void marcar_menor(JCheckBox listar,JCheckBox add,JCheckBox editar,JCheckBox eliminar,JCheckBox desmarcar,JCheckBox marcar) {
        if(marcar.isSelected()){
            desmarcar.setSelected(false);
            listar.setSelected(true);
            add.setSelected(true);
            editar.setSelected(true);
            eliminar.setSelected(true);
        }else{
            desmarcar.setSelected(false);
            listar.setSelected(true);
            add.setSelected(false);
            editar.setSelected(false);
            eliminar.setSelected(false);
        }
    }
    
    
    private void desmarcar_usuarios(JCheckBox listar,JCheckBox add,JCheckBox editar,JCheckBox eliminar,JCheckBox desmarcar,JCheckBox marcar) {
        if(desmarcar.isSelected()){
            marcar.setSelected(false);
            listar.setSelected(false);
            add.setSelected(false);
            editar.setSelected(false);
            eliminar.setSelected(false);
        }else{
            marcar.setSelected(false);
            listar.setSelected(true);
            add.setSelected(false);
            editar.setSelected(false);
            eliminar.setSelected(false);
        }
    }
    
    
//    private boolean activos_todos(){
//        boolean activos=false;
//        if(marcar_cartaporte.isSelected()&&marcar_ekipo.isSelected()&&marcar_hoja_ruta.isSelected()&&marcar_info_laboratorio.isSelected()&&
//                marcar_plano.isSelected()&&marcar_prep_tecnica.isSelected()&&marcar_prod_programa.isSelected()&&marcar_proyecto.isSelected()&&
//                marcar_recursos_x_programa.isSelected()&&marcar_tarjeta_combustible.isSelected()&&marcar_todos_contrato.isSelected()&&
//                marcar_todos_ficha_costo.isSelected()&&marcar_usuario.isSelected()){
//            activos=true;
//        }
//        return activos;
//    }
//    
//    private boolean desactivos_todos(){
//        boolean desactivos=false;
//        if(desmarcar_cartaporte.isSelected()&&desmarcar_ekipo.isSelected()&&desmarcar_hoja_ruta.isSelected()&&desmarcar_info_laboratorio.isSelected()&&
//             desmarcar_plano.isSelected()&&desmarcar_prep_tecnica.isSelected()&&desmarcar_prod_programa.isSelected()&&desmarcar_proyecto.isSelected()&&
//             desmarcar_recursos_x_programa.isSelected()&&desmarcar_tarjeta_combustible.isSelected()&&desmarcar_todos_contrato.isSelected()&&
//             desmarcar_ficha_costo.isSelected()&&desmarcar_usuario.isSelected()){
//            desactivos=true;
//        }
//        return desactivos;
//    }
    
    private void centrar_componente(Component c){
        Dimension pantalla_size=Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frame_size=c.getSize();
        if(frame_size.height>pantalla_size.height){
            frame_size.height=pantalla_size.height;
        }
        if(frame_size.width>pantalla_size.width){
            frame_size.width=pantalla_size.width;
        }
        c.setLocation((pantalla_size.width-frame_size.width)/2, (pantalla_size.height-frame_size.height)/2);
    }
    
    private void reset_campos(){
        nombre_usuario.setText("");
        label_pass.setText("");
        Principal.txt_buscar.setText("");
        opciones_de_gestionar_usuarios.setListar("");
         // contrato
        add_contrato.setSelected(false);
        editar_contrato.setSelected(false);
        eliminar_contrato.setSelected(false);
        datos_cargados.setSelected(false);
        marcar_todos_contrato.setSelected(false);
        desmarcar_todos_contrato.setSelected(true);
        // ususario
        inicio(listar_usuarios, add_usuario, editar_usuario, delete_usuario, marcar_usuario, desmarcar_usuario);
        combo_area_usuarios.setSelectedIndex(0);
    }
    
    private void reset_botones(){
        boton_cancelar.setVisible(false);
        boton_registrar.setText("REGISTRAR");
        boton_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnRegistrar.png"))); 
    }
    
    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        String sql_permiso="SELECT * FROM permisos WHERE usuario='"+principal.Principal.label_user.getText()+"' and panel_usuarios='1'"
                + "and delete_usuarios='1' ";
                String mj1="Usted no cuenta con los permisos requeridos para ejecutar esta acción.";
                String mj2="Si considera que estamos en un error contacte con el administrador del ";
                String mj3="sistema para que le otorgue los permisos pertinentes";
        if(opciones_de_gestionar_usuarios.existe(sql_permiso)){
            this.menu.setVisible(false);
            int fila = this.tabla_usuarios.getSelectedRow();
            String nombre = this.tabla_usuarios.getValueAt(fila, 0).toString().trim();

            alertas.WarningAlert w = new alertas.WarningAlert(new JFrame(), true);
            w.msj1.setText("Se eliminara el usuario de");
            w.msj2.setText("nombre (" + nombre + ")");
            w.msj3.setText("de manera permanente del sistema.");
            w.setVisible(true);

            if (w.hecho) {
                int control_user=opciones_de_gestionar_usuarios.eliminar_user(nombre);
                int control_permisos=opciones_de_gestionar_usuarios.eliminar_permisos(nombre);
                System.out.println("control user "+control_user);
                System.out.println(nombre);
                System.out.println("control permisos "+control_permisos);
                
                if (control_user==1 && control_permisos==1) {
                    opciones_de_gestionar_usuarios.setListar("");
                    reset_campos();
                    reset_botones();
                    SuccessAlert s = new SuccessAlert(new JFrame(), true);
                    s.msj1.setText("Usuario eliminado con éxito");
                    s.msj2.setText("");
                    s.msj3.setText("");
                    s.setVisible(true);
                } else {
                    ErrorAlert e = new ErrorAlert(new JFrame(), true);
                    e.msj1.setText("Algo salio mal. No fue posible");
                    e.msj2.setText("continuar con esta acción.");
                    e.msj3.setText("");
                    e.setVisible(true);
                }
            }
                    } else {
                        ErrorAlert.lanza_error_variable_sin_ex(mj1, mj2, mj3);
                    }
    }//GEN-LAST:event_btnBorrarActionPerformed

    
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        this.menu.setVisible(false);
        boton_cancelar.setVisible(true);
        boton_registrar.setText("GUARDAR CAMBIOS");
        boton_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnGuardar.png")));

        String sql_permiso="SELECT * FROM permisos WHERE usuario='"+principal.Principal.label_user.getText()+"' and panel_usuarios='1'"
                + "and edit_usuarios='1' ";
        String mj1 = "Usted no cuenta con los permisos requeridos para ejecutar esta acción.";
        String mj2 = "Si considera que estamos en un error contacte con el administrador del ";
        String mj3 = "sistema para que le otorgue los permisos pertinentes";
        if (opciones_de_gestionar_usuarios.existe(sql_permiso)) {
            int fila = tabla_usuarios.getSelectedRow();
            String user = tabla_usuarios.getValueAt(fila, 0).toString();
            String pass = tabla_usuarios.getValueAt(fila, 1).toString();
            String area = tabla_usuarios.getValueAt(fila, 2).toString();
            String sql_contrato = "Select * from permisos where usuario='"+user+"'";
            reset_campos();
            reset_botones();
            opciones_de_gestionar_usuarios uc=new opciones_de_gestionar_usuarios();
            uc.setUser_control(user);
            nombre_usuario.setText(user);
            label_pass.setText(pass);
            combo_area_usuarios.setSelectedItem(area);
            boton_cancelar.setVisible(true);
            boton_registrar.setText("GUARDAR CAMBIOS");
            boton_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/contrato/btnGuardar.png")));
            
            opciones_de_gestionar_usuarios.activa_checbox_contratos(user, sql_contrato, add_contrato, editar_contrato, eliminar_contrato, desmarcar_todos_contrato, marcar_todos_contrato,datos_cargados);
            opciones_de_gestionar_usuarios.activa_checbox_usuario(user, sql_contrato, listar_usuarios, add_usuario, editar_usuario, delete_usuario, desmarcar_usuario, marcar_usuario);

            this.menu.setVisible(false);

        } else {
            ErrorAlert.lanza_error_variable_sin_ex(mj1, mj2, mj3);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void boton_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_registrarActionPerformed
        // TODO add your handling code here:
        if(boton_registrar.getText().equals("REGISTRAR")){
            String sql_permiso="SELECT * FROM permisos WHERE usuario='"+principal.Principal.label_user.getText()+"' and add_usuarios='1'";
        String mj1="Usted no cuenta con los permisos requeridos para accedeer a este apartado.";
        String mj2="Si considera que estamos en un error contacte con el administrador del ";
        String mj3="sistema para que le otorgue los permisos pertinentes";
        if(opciones_de_gestionar_usuarios.existe(sql_permiso)){
        String sql="select * from usuarios where userr='"+nombre_usuario.getText()+"'";
       String mje1="El nombre de usuario que intenta registrar ya existe";
       String mje2="Por favor introduzca un nombre de usuario distinto.";
        if (nombre_usuario.getText().isEmpty()||label_pass.getText().isEmpty()||opciones_de_gestionar_usuarios.existe(sql)||
                               obliga_listar(listar_usuarios, add_usuario, editar_usuario, delete_usuario) || combo_area_usuarios.getSelectedIndex()==0) {
            if(nombre_usuario.getText().isEmpty()){
                nombre_usuario.requestFocus();
                ErrorAlert.lanza_error_variable_sin_ex("todos los campos con asterisco son obligatorios", "", "");
            }else if(label_pass.getText().isEmpty()){
                label_pass.requestFocus();
                ErrorAlert.lanza_error_variable_sin_ex("todos los campos con asterisco son obligatorios", "", "");
            }else if (opciones_de_gestionar_usuarios.existe( sql)) {
                            ErrorAlert.lanza_error_variable_sin_ex("",mje1,mje2);
                            nombre_usuario.requestFocus();
                        }else if(obliga_listar(listar_usuarios, add_usuario, editar_usuario, delete_usuario) ){
                           if(obliga_listar(listar_usuarios, add_usuario, editar_usuario, delete_usuario)) {
                           String A="Si un usuario contendrá permisos sobre el apartado 'permisos', el permiso 'LISTAR' debe de estar";
                           String B="contemplado obligatoriamente dentro de este. Por favor revise todos los apartados y";
                           String C="verifique que esta norma del sistema se cumpla en cada uno de ellos.";
                           ErrorAlert.lanza_error_variable_sin_ex(A, B, C);
                           }
                        } else if(combo_area_usuarios.getSelectedIndex()==0){
                               String AA="Debe asignar obligatoriamente un área al usuario que intenta crear o modificar";
                               ErrorAlert.lanza_error_variable_sin_ex(AA, "", "");
                           }
            
        } else {
            Runnable runnable1 = new Runnable() {
                public void run() {
                    Guardando_general l = new Guardando_general(new JFrame(), true);
                    opciones_de_gestionar_usuarios uc=new opciones_de_gestionar_usuarios();
                    l.setVisible(true);
                    try{
                    pnl_Gestionar_usuarios.this.setEnabled(false);
                    // guardar user y pass
                    uc.setUser(nombre_usuario.getText().trim());
                    uc.setPass(label_pass.getText());
                    uc.setArea(combo_area_usuarios.getSelectedItem().toString());
                    int control_user= opciones_de_gestionar_usuarios.registrar_user(uc.getUser(), uc.getPass(), uc.getArea());
                        // guardar permisos de user
                        uc.setUser_permiso(nombre_usuario.getText().trim());
                        
                        if(add_contrato.isSelected()){
                            uc.setAdd_permiso_contratos("1");
                        }else{
                            uc.setAdd_permiso_contratos("0");
                        }                  
                        if(editar_contrato.isSelected()){
                            uc.setEdit_permiso_contratos("1");
                        }else{
                            uc.setEdit_permiso_contratos("0");
                        }  
                        if(eliminar_contrato.isSelected()){
                            uc.setDelete_permiso_contratos("1");
                        }else{
                            uc.setDelete_permiso_contratos("0");
                        }  
                        if(listar_usuarios.isSelected()){
                            uc.setListar_usuarios("1");
                        }else{
                            uc.setListar_usuarios("0");
                        }
                        if(add_usuario.isSelected()){
                            uc.setAdd_permiso_usuarios("1");
                        }else{
                            uc.setAdd_permiso_usuarios("0");
                        }                  
                        if(editar_usuario.isSelected()){
                            uc.setEdit_permiso_usuarios("1");
                        }else{
                            uc.setEdit_permiso_usuarios("0");
                        }  
                        if(delete_usuario.isSelected()){
                            uc.setDelete_permiso_usuarios("1");
                        }else{
                            uc.setDelete_permiso_usuarios("0");
                        }  
                        if(datos_cargados.isSelected()){
                            uc.setDatos_cargados("1");
                        }else{
                            uc.setDatos_cargados("0");
                        } 
                      int control_permisos = opciones_de_gestionar_usuarios.registrar_permisos(uc.getUser_permiso(), uc.getAdd_permiso_contratos(), uc.getEdit_permiso_contratos(), uc.getDelete_permiso_contratos(), uc.getListar_usuarios(), uc.getAdd_permiso_usuarios(), uc.getEdit_permiso_usuarios(), uc.getDelete_permiso_usuarios(), uc.getDatos_cargados());
                       
                    reset_campos();
                    pnl_Gestionar_usuarios.this.setEnabled(true);
                    l.setVisible(false);
                    if(control_user==1 && control_permisos==1){
                    SuccessAlert e = new SuccessAlert(new JFrame(), true);
            e.msj1.setText("¡Los datos del usuario fueron");
            e.msj2.setText("guardados exitosamente!.");
            e.msj3.setText("");
            e.setLocationRelativeTo(null);
            centrar_componente(e);
            e.setVisible(true);
            
                    }else if(control_user==1 && control_permisos==0){
                        SuccessAlert e = new SuccessAlert(new JFrame(), true);
            e.msj1.setText("¡Los datos del usuario se registraron satisfactoriamente!");
            e.msj2.setText("Pero hubo un problema al guardar los permisos.");
            e.msj3.setText("");
            e.setLocationRelativeTo(null);
            centrar_componente(e);
            e.setVisible(true);
                    }else if(control_user==0 && control_permisos==1){
                        ErrorAlert.lanza_error_variable_sin_ex("Los datos de permisos del usuario se registraron satisfactoriamente",
                                "pero hubo un problema al guardar los datos de usuario y contraseña", "");
            
                    }
                    
                    
                    }catch(Exception e){
                        ErrorAlert.lanza_error(e);
                        
                    }
                }
            };
            Thread t1 = new Thread(runnable1);
            t1.start();
        }
        }else{
            ErrorAlert.lanza_error_variable_sin_ex(mj1, mj2, mj3);
        }
        }else if(boton_registrar.getText().equals("GUARDAR CAMBIOS")){
            System.out.println("ESTAMOS EN GUARDAR CAMBIOS");
            opciones_de_gestionar_usuarios uc=new opciones_de_gestionar_usuarios();
            String user_control=uc.getUser_control();
            String sql_permiso="SELECT * FROM permisos WHERE usuario='"+principal.Principal.label_user.getText()+"' and edit_usuarios='1'";
        String mj1="Usted no cuenta con los permisos requeridos para ejecutar esta acción.";
        String mj2="Si considera que estamos en un error contacte con el administrador del ";
        String mj3="sistema para que le otorgue los permisos pertinentes";
        if(opciones_de_gestionar_usuarios.existe(sql_permiso)){
        String sql="select * from usuarios where userr='"+nombre_usuario.getText()+"'";
       String mje1="El nombre de usuario que intenta registrar ya existe";
       String mje2="Por favor introduzca un nombre de usuario distinto.";
        if (nombre_usuario.getText().isEmpty()||label_pass.getText().isEmpty()||(!nombre_usuario.getText().equals(user_control) && opciones_de_gestionar_usuarios.existe(sql))||
                               obliga_listar(listar_usuarios, add_usuario, editar_usuario, delete_usuario) || combo_area_usuarios.getSelectedIndex()==0) {
            if(nombre_usuario.getText().isEmpty()){
                nombre_usuario.requestFocus();
                ErrorAlert.lanza_error_variable_sin_ex("Todos los campos con asterisco son obligatorios", "", "");
            }else if(label_pass.getText().isEmpty()){
                label_pass.requestFocus();
                ErrorAlert.lanza_error_variable_sin_ex("Todos los campos con asterisco son obligatorios", "", "");
            }else if (!nombre_usuario.getText().equals(user_control) && opciones_de_gestionar_usuarios.existe(sql)) {
                            ErrorAlert.lanza_error_variable_sin_ex("",mje1,mje2);
                            nombre_usuario.requestFocus();
                        }else if(obliga_listar(listar_usuarios, add_usuario, editar_usuario, delete_usuario)){
                            String A="Si un usuario contendrá permisos sobre un apartado, el permiso 'LISTAR' debe de estar";
                           String B="contemplado obligatoriamente dentro de estos. Por favor revise todos los apartados y";
                           String C="verifique que esta norma del sistema se cumpla en cada uno de ellos.";
                            ErrorAlert.lanza_error_variable_sin_ex(A, B, C);
                        }else if(combo_area_usuarios.getSelectedIndex()==0){
                               String AA="Debe asignar obligatoriamente un área al usuario que intenta crear o modificar";
                               ErrorAlert.lanza_error_variable_sin_ex(AA, "", "");
                           }
            
        } else {
            Runnable runnable1 = new Runnable() {
                public void run() {
                    Guardando_general l = new Guardando_general(new JFrame(), true);
                    opciones_de_gestionar_usuarios uc=new opciones_de_gestionar_usuarios();
                    l.setVisible(true);
                    try{
                    pnl_Gestionar_usuarios.this.setEnabled(false);
                    // guardar user y pass
                    System.out.println("ESTAMOS EN GUARDAR CAMBIOS 2");
                    uc.setUser(nombre_usuario.getText().trim());
                    uc.setPass(label_pass.getText());
                    uc.setArea(combo_area_usuarios.getSelectedItem().toString());
                        System.out.println("AREA "+uc.getArea());
                    int control_user= opciones_de_gestionar_usuarios.actualizar_user(uc.getUser(), uc.getPass(),uc.getArea(), uc.getUser_control());
                    System.out.println("CONTROL "+uc.getUser_control());
                        // guardar permisos de user
                        uc.setUser_permiso(nombre_usuario.getText().trim());
                        
                        if(add_contrato.isSelected()){
                            uc.setAdd_permiso_contratos("1");
                        }else{
                            uc.setAdd_permiso_contratos("0");
                        }                  
                        if(editar_contrato.isSelected()){
                            uc.setEdit_permiso_contratos("1");
                        }else{
                            uc.setEdit_permiso_contratos("0");
                        }  
                        if(eliminar_contrato.isSelected()){
                            uc.setDelete_permiso_contratos("1");
                        }else{
                            uc.setDelete_permiso_contratos("0");
                        }  
                        if(listar_usuarios.isSelected()){
                            uc.setListar_usuarios("1");
                        }else{
                            uc.setListar_usuarios("0");
                        }
                        if(add_usuario.isSelected()){
                            uc.setAdd_permiso_usuarios("1");
                        }else{
                            uc.setAdd_permiso_usuarios("0");
                        }                  
                        if(editar_usuario.isSelected()){
                            uc.setEdit_permiso_usuarios("1");
                        }else{
                            uc.setEdit_permiso_usuarios("0");
                        }  
                        if(delete_usuario.isSelected()){
                            uc.setDelete_permiso_usuarios("1");
                        }else{
                            uc.setDelete_permiso_usuarios("0");
                        }
                        if(datos_cargados.isSelected()){
                            uc.setDatos_cargados("1");
                        }else{
                            uc.setDatos_cargados("0");
                        } 
                      int control_permisos = opciones_de_gestionar_usuarios.actualizar_permisos(uc.getUser_permiso(), uc.getAdd_permiso_contratos(), uc.getEdit_permiso_contratos(), uc.getDelete_permiso_contratos(), uc.getListar_usuarios(), uc.getAdd_permiso_usuarios(), uc.getEdit_permiso_usuarios(), uc.getDelete_permiso_usuarios(),uc.getDatos_cargados(),uc.getUser_control());
                    System.out.println("CONTROL permisos "+control_permisos);
                        System.out.println("dato datos "+uc.getDatos_cargados());
                      reset_campos();
                    reset_botones();
                    pnl_Gestionar_usuarios.this.setEnabled(true);
                    l.setVisible(false);
                    if(control_user==1 && control_permisos==1){
                    SuccessAlert e = new SuccessAlert(new JFrame(), true);
            e.msj1.setText("¡Los datos del usuario fueron");
            e.msj2.setText("editados exitosamente!.");
            e.msj3.setText("");
            e.setLocationRelativeTo(null);
            centrar_componente(e);
            e.setVisible(true);
            
                    }else if(control_user==1 && control_permisos==0){
                        SuccessAlert e = new SuccessAlert(new JFrame(), true);
            e.msj1.setText("¡Los datos del usuario se editaron satisfactoriamente!");
            e.msj2.setText("Pero hubo algun problema al guardar los cambios en los permisos.");
            e.msj3.setText("");
            e.setLocationRelativeTo(null);
            centrar_componente(e);
            e.setVisible(true);
                    }else if(control_user==0 && control_permisos==1){
                        ErrorAlert.lanza_error_variable_sin_ex("Los datos de permisos del usuario se editaron satisfactoriamente",
                                "pero hubo un problema al guardar los cambios de usuario y contraseña", "");
            
                    }
                    
                    
                    }catch(Exception e){
                        ErrorAlert.lanza_error(e);
                        
                    }
                }
            };
            Thread t1 = new Thread(runnable1);
            t1.start();
        }
        }else{
            ErrorAlert.lanza_error_variable_sin_ex(mj1, mj2, mj3);
        }
        
    }//GEN-LAST:event_boton_registrarActionPerformed
    }
    private void desmarcar_todos_contratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desmarcar_todos_contratoActionPerformed
        // TODO add your handling code here:
        if(desmarcar_todos_contrato.isSelected()){
            marcar_todos_contrato.setSelected(false);
            add_contrato.setSelected(false);
            editar_contrato.setSelected(false);
            eliminar_contrato.setSelected(false);
            datos_cargados.setSelected(false);
        }else{
            marcar_todos_contrato.setSelected(false);
            add_contrato.setSelected(false);
            editar_contrato.setSelected(false);
            eliminar_contrato.setSelected(false);
            datos_cargados.setSelected(false);
        }
    }//GEN-LAST:event_desmarcar_todos_contratoActionPerformed

    private void editar_contratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editar_contratoActionPerformed
        // TODO add your handling code here:
        if(desmarcar_todos_contrato.isSelected()){
            desmarcar_todos_contrato.setSelected(false);
        }
        if(editar_contrato.isSelected()==false&&marcar_todos_contrato.isSelected()==true){
            marcar_todos_contrato.setSelected(false);
        }
    }//GEN-LAST:event_editar_contratoActionPerformed

    private void add_contratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_contratoActionPerformed
        // TODO add your handling code here:
        if(desmarcar_todos_contrato.isSelected()){
            desmarcar_todos_contrato.setSelected(false);
        }
        if(add_contrato.isSelected()==false&&marcar_todos_contrato.isSelected()==true){
            marcar_todos_contrato.setSelected(false);
        }
    }//GEN-LAST:event_add_contratoActionPerformed

    private void marcar_todos_contratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marcar_todos_contratoActionPerformed
        // TODO add your handling code here:
        if(marcar_todos_contrato.isSelected()){
            desmarcar_todos_contrato.setSelected(false);
//            listar_contrato.setSelected(true);
            add_contrato.setSelected(true);
            editar_contrato.setSelected(true);
            eliminar_contrato.setSelected(true);
            datos_cargados.setSelected(true);
        }else{
            desmarcar_todos_contrato.setSelected(false);
//            listar_contrato.setSelected(true);
            add_contrato.setSelected(false);
            editar_contrato.setSelected(false);
            eliminar_contrato.setSelected(false);
            datos_cargados.setSelected(false);
        }
    }//GEN-LAST:event_marcar_todos_contratoActionPerformed

    private void tabla_usuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_usuariosMouseClicked
        int row = tabla_usuarios.rowAtPoint(evt.getPoint());
        if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            pnl_Gestionar_usuarios.tabla_usuarios.setRowSelectionInterval(row, row);
            PosicionMouse = evt.getY() / 16;
            menu.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            pnl_Gestionar_usuarios.tabla_usuarios.setRowSelectionInterval(row, row);
        }
    }//GEN-LAST:event_tabla_usuariosMouseClicked

    private void nombre_usuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombre_usuarioKeyTyped
        // TODO add your handling code here:
        char letras = evt.getKeyChar();
        if ((letras < 'a' || letras > 'z') && (letras < 'A' | letras > 'Z')) {
            if ((letras != 'ñ') && (letras != 'Ñ') && (letras != 'á') && (letras != 'Á') && (letras != 'é') && (letras != 'É') && (letras != 'í')
                && (letras != 'Í') && (letras != 'ó') && (letras != 'Ó') && (letras != 'ú') && (letras != 'Ú') && (letras != ' ')) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_nombre_usuarioKeyTyped

    private void nombre_usuarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombre_usuarioKeyReleased
        // TODO add your handling code here:
        nombre_usuario.setText(nombre_usuario.getText().toUpperCase());
    }//GEN-LAST:event_nombre_usuarioKeyReleased

    private void marcar_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marcar_usuarioActionPerformed
        // TODO add your handling code here:
                marcar_menor(listar_usuarios, add_usuario, editar_usuario, delete_usuario, desmarcar_usuario, marcar_usuario);
    }//GEN-LAST:event_marcar_usuarioActionPerformed

    private void listar_usuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listar_usuariosActionPerformed
        // TODO add your handling code here:
        if(desmarcar_usuario.isSelected()){
            desmarcar_usuario.setSelected(false);
        }
        if(listar_usuarios.isSelected()==false&&marcar_usuario.isSelected()==true){
            marcar_usuario.setSelected(false);
        }
    }//GEN-LAST:event_listar_usuariosActionPerformed

    private void add_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_usuarioActionPerformed
        // TODO add your handling code here:
        if(desmarcar_usuario.isSelected()){
            desmarcar_usuario.setSelected(false);
        }
        if(add_usuario.isSelected()==false&&marcar_usuario.isSelected()==true){
            marcar_usuario.setSelected(false);
        }
    }//GEN-LAST:event_add_usuarioActionPerformed

    private void editar_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editar_usuarioActionPerformed
        // TODO add your handling code here:
        if(desmarcar_usuario.isSelected()){
            desmarcar_usuario.setSelected(false);
        }
        if(editar_usuario.isSelected()==false&&marcar_usuario.isSelected()==true){
            marcar_usuario.setSelected(false);
        }
    }//GEN-LAST:event_editar_usuarioActionPerformed

    private void desmarcar_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desmarcar_usuarioActionPerformed
        // TODO add your handling code here:
                desmarcar_usuarios(listar_usuarios, add_usuario, editar_usuario, delete_usuario, desmarcar_usuario, marcar_usuario);
    }//GEN-LAST:event_desmarcar_usuarioActionPerformed

    private void eliminar_contratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar_contratoActionPerformed
        // TODO add your handling code here:
        if(desmarcar_todos_contrato.isSelected()){
            desmarcar_todos_contrato.setSelected(false);
        }
        if(eliminar_contrato.isSelected()==false&&marcar_todos_contrato.isSelected()==true){
            marcar_todos_contrato.setSelected(false);
        }
    }//GEN-LAST:event_eliminar_contratoActionPerformed

    private void delete_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_usuarioActionPerformed
        // TODO add your handling code here:
        if(desmarcar_usuario.isSelected()){
            desmarcar_usuario.setSelected(false);
        }
        if(delete_usuario.isSelected()==false&&marcar_usuario.isSelected()==true){
            marcar_usuario.setSelected(false);
        }
    }//GEN-LAST:event_delete_usuarioActionPerformed

    private void boton_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_cancelarActionPerformed
        // TODO add your handling code here:
        reset_campos();
        reset_botones();
    }//GEN-LAST:event_boton_cancelarActionPerformed

    private void datos_cargadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datos_cargadosActionPerformed
        // TODO add your handling code here:
        if(desmarcar_todos_contrato.isSelected()){
            desmarcar_todos_contrato.setSelected(false);
        }
        if(datos_cargados.isSelected()==false&&marcar_todos_contrato.isSelected()==true){
            marcar_todos_contrato.setSelected(false);
        }
    }//GEN-LAST:event_datos_cargadosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox add_contrato;
    private javax.swing.JCheckBox add_usuario;
    private rojeru_san.RSButtonRiple boton_cancelar;
    private rojeru_san.RSButtonRiple boton_registrar;
    private rojeru_san.RSButtonRiple btnBorrar;
    private rojeru_san.RSButtonRiple btnEditar;
    public static org.bolivia.combo.SComboBox combo_area_usuarios;
    private javax.swing.JCheckBox datos_cargados;
    private javax.swing.JCheckBox delete_usuario;
    private javax.swing.JCheckBox desmarcar_todos_contrato;
    private javax.swing.JCheckBox desmarcar_usuario;
    private javax.swing.JCheckBox editar_contrato;
    private javax.swing.JCheckBox editar_usuario;
    private javax.swing.JCheckBox eliminar_contrato;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    public static javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel21;
    private rojeru_san.RSMPassView label_pass;
    private javax.swing.JCheckBox listar_usuarios;
    private javax.swing.JCheckBox marcar_todos_contrato;
    private javax.swing.JCheckBox marcar_usuario;
    private rojerusan.RSPopuMenu menu;
    public static rojeru_san.rsfield.RSTextMaterial nombre_usuario;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JScrollPane scroll;
    public static rojerusan.RSTableMetro tabla_usuarios;
    // End of variables declaration//GEN-END:variables
}
